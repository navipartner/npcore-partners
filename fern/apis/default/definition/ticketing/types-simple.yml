types:

  ## Simple types
  Token:
    type: string
    docs: A unique token that identifies a ticket reservation
    examples:
      - name: ExampleToken
        value: ABC123456DEF789GHI
      - name: ExampleRevokeId
        value: R123456BAR789BAZ00


  ItemNumber:
    type: string
    docs: An item or product number defined in the ticketing system
    examples:
      - name: ExampleItemNumber
        value: "31001"

  AdmissionCode:
    type: string
    docs: A unique code that identifies a specific admission.
    examples:
      - name: ExampleAdmissionCastle
        value: CASTLE

  ScheduleId:
    type: uuid
    docs: The unique identifier of a schedule
    examples:
      - name: ExampleMorningId
        value: 12345678-1234-1234-1234-123456789012
      - name: ExampleEveningId
        value: 12345678-1234-1234-1234-123456789013

  ScheduleNumber:
    type: integer
    docs: The ID of a specific time slot for a specific admission
    examples:
      - name: ExampleMorningId
        value: 452
      - name: ExampleEveningId
        value: 489

  NumberOfTickets:
    type: integer
    docs: The number of tickets to reserved

  ExpiresAt:
    type: datetime
    docs: The date and time when the token expires and reservation is no longer valid
    examples:
      - name: ExampleExpiresAt
        value: "2024-10-11T12:13:00Z"

  TicketHolder:
    type: string
    docs: The name of the person holding the ticket(s)
    examples:
      - name: ExampleTicketHolder
        value: "John Doe"

  NotificationAddress:
    type: string
    docs: The email address or mobile phone number to send tickets and notifications to
    examples:
      - name: ExampleEmail
        value: "john@acme.com"
      - name: ExamplePhone
        value: "+46701234567"

  PaymentReference:
    type: string
    docs: 
      A reference to the payment transaction. Unless provided, the reservation is not considered paid. 
      A confirmed unpaid reservation must be paid on site before the tickets are valid for usage.

  ReservationStatusEnum:
    enum:
      - registered
      - confirmed
      - alreadyConfirmed
      - canceled
      - expired
      - reserved
      - optional

  ReservationStatus:
    type: ReservationStatusEnum
    docs: The status of the reservation

  TicketId:
    type: uuid
    docs: The unique identifier of a ticket
    examples:
      - name: ExampleTicket1
        value: 12345678-1234-1234-1234-123456789012
      - name: ExampleTicket2
        value: ABCDEFAB-1234-1234-1234-123456789013
      - name: ExampleTicket3
        value: FABCDEFA-1234-1234-1234-123456789014

  TicketExternalNumber:
    type: string
    docs: The unique identifier of a ticket
    examples:
      - name: ExampleTicket1
        value: TICKET123
      - name: ExampleTicket2
        value: TICKET124
      - name: ExampleTicket3
        value: TICKET124
      - name: ExampleTicketInvalid
        value: FOO123

  PinCode:
    type: string
    docs: A pin code for the ticket, used for validation when rescheduling or revoking a confirmed ticket
    examples:
      - name: ExamplePinCode
        value: "1234"

  UnitPrice:
    type: double
    docs: The unit price of the ticket.
    examples:
      - name: ExampleUnitPrice
        value: 100.0

  UnitPriceInclVat:
    type: double
    docs: The unit price including VAT of the ticket.
    examples:
      - name: ExampleUnitPrice
        value: 100.0

  UnitPriceIncludesVat:
    type: boolean
    docs: Indicates if the unit price includes VAT.
    examples:
      - name: ExampleUnitPriceIncludesVat
        value: true  

  DiscountPct:
    type: double
    docs: The discount percentage for the admission based either on the customer or the quantity of tickets.

  VatPct:
    type: double
    docs: The VAT percentage for the admission.

  StoreCode:
    type: string
    docs: 
      A unique identifier for a store - a logical grouping defining a subset of ticket items. 
      This is used to filter the list of ticket items returned by the API.
      When left empty, the API will use the default store code. 
    examples:
      - name: ExampleStoreCode
        value: "EN"
  
  CustomerNumber:
    type: string
    docs: The customer number of the user making the request. The customer number affects pricing.

  IssuedAt:
    type: datetime
    docs: The date and time when the ticket was issued
    examples:
      - name: ExampleIssuedAt
        value: "2024-10-15T12:13:00Z"

  ReferenceDate:
    type: date
    docs: A date to use as a reference for the capacity search. If not specified, the current date will be used. 
    examples:
      - name: ExampleSalesFromDate
        value: "2024-10-11"
      - name: ExampleSalesUntilDate
        value: "2024-10-17"
      - name: ExampleCheckCapacityDate
        value: "2024-10-15"

  ReferenceDateTime:
    type: datetime
    docs: A date and time to use as a reference for the capacity search. If not specified, the current date and time will be used. 
    examples:
      - name: ExampleValidFrom
        value: 2024-10-15T00:00:00Z
      - name: ExampleValidUntil
        value: 2025-10-14T23:59:59Z
      - name: ExamplePrintedAt
        value: 2024-10-15T12:00:00Z

  DefaultAdmission:
    type: boolean
    docs: Indicates if this admission is the default admission when there are multiple admission defined.

  AdmissionIsIncludedEnum:
    enum:
      - mandatory
      - optional
      - optionalSelected

  AdmissionIsIncluded:
    type: AdmissionIsIncludedEnum
    docs: 
      Indicates if the admission is mandatory or optional. Mandatory implies that the admission can not be deselected. 
      Optional implies that you must opt-in to include the admission, while optionalSelected implies that the admission is optional but selected by default.

  CapacityControlEnum:
    enum:
      - none
      - sales
      - admitted
      - full
      #- seats

  CapacityControl:
    type: CapacityControlEnum
    docs: 
      Indicates the type of capacity control for the admission. 
      None implies that there is no capacity control. 
      Sales implies that the capacity is controlled by the number of tickets sold. 
      Admitted implies that the capacity is controlled by the number of tickets admitted. 
      Full implies that the capacity is admitted and departed. 
      #Seats implies that the capacity is controlled by the number of seats available.

  ScheduleSelectionEnum:
    enum:
      - noScheduleSelection
      - currentSchedule
      - nextAvailableSchedule
      - userSelectedSchedule
      
  ScheduleSelection:
    type: ScheduleSelectionEnum
    docs: 
      All reservations require a schedule id. 
      However, this field indicates the type of automation you get when performing a reservation without providing schedule id for the admission.
      * NoScheduleSelection implies that there is no _automatic_ schedule selection when no schedule id provided (reservation will fail). 
      * CurrentSchedule implies that the current schedule (aka "today") is selected. 
      * NextAvailableSchedule implies that the next available schedule is selected.
      The current and Next-available select rules work well in a POS sales scenario.

  PricingOptionEnum:
    enum:
      - fixed
      - dynamic_fixed_amount
      - dynamic_relative_amount
      - dynamic_percentage

  PricingOption:
    type: PricingOptionEnum
    docs: 
      The pricing option for the schedule. 
      Fixed implies that the price is fixed - calculated by the ERP module only.
      Dynamic_fixed_amount implies that the price is fixed but set by the schedule rather than the ERP module.
      Dynamic_relative_amount implies that the base price is from the ERP module and offset by a relative amount defined by the schedule. 
      Dynamic_percentage implies that the base price is from the ERP module and offset by a percentage defined by the schedule. 

  AdjustedAmount:
    type: double
    docs: The amount used to adjust admission unit price.

  AdjustedDiscountPct:
    type: double
    docs: The percentage used to adjust admission unit price.

  AdjustedUnitPrice:
    type: double
    docs: The calculated adjusted unit price for the admission.

  AdjustedTotalPrice:
    type: double
    docs: The calculated adjusted total price for the admission. (Adjusted unit price * quantity).

  ArrivalFromTime:
    type: string
    docs: The earliest time a customer can arrive for the time slot.
  
  ArrivalUntilTime:
    type: string
    docs: The latest time a customer can arrive for the time slot.

  Allocatable:
    type: boolean
    docs: Indicates if the schedule is allocatable. This boolean is used to determine if the schedule can be booked and considers arrival times and capacity. 

  AllocationModelEnum:
    enum:
      - capacity
      - waiting_list

  AllocationModel:
    type: AllocationModelEnum
    docs: Whether the schedule is allocated based on capacity or waiting list. When the allocation model is waiting list, the reservation requires a waiting list ID.

  RemainingCapacity:
    type: integer
    docs: The remaining capacity for the schedule. Note that this number can be positive even when the schedule is not allocatable.

  AllocationExplanation:
    type: string
    docs: An explanation why the schedule is allocatable or not allocatable.
    audiences:
      - internal

  MemberNumber:
    type: string
    docs: The unique identifier of a member
    examples:
      - name: ExampleMemberNumber
        value: MEMBER123

  ScannerStation:
    type: string
    docs: The name of the scanner station
    examples:
      - name: ExampleScannerStationEntrance
        value: Entrance
      - name: ExampleScannerStationExit
        value: Exit

  CouponType:
    type: string
    docs: The type of coupon
    examples:
      - name: ExampleCouponType
        value: DISCOUNT

  CouponNumber:
    type: string
    docs: The external reference number of the coupon. 
    examples:
      - name: ExampleCouponNumber
        value: COUPON123
  
  CouponId:
    type: uuid
    docs: The unique identifier of a coupon
    examples:
      - name: ExampleCouponId
        value: 12345678-1234-1234-1234-123456789012

  Admitted:
      type: boolean
      docs: Indicates whether the ticket has been registered as admitted to the admission

  Departed:
      type: boolean
      docs: Indicates whether the ticket has been registered as departed from the admission

  TicketSent:
      type: boolean
      docs: Indicates whether the ticket has been sent as an e-ticket

  PrintCount:
      type: integer
      docs: The number of times the ticket has been printed. This value needs to correspond to the current value or confirmation will fail. Specifying -1 will ignore the print count check. The print count is increased by the confirmPrint operation.
      examples:
        - name: ExamplePrintCount
          value: 0

  PrintCountResponse:
      type: integer
      docs: The number of times the ticket has been printed. The print count is increased by the confirmPrint operation.
      examples:
        - name: ExamplePrintCount
          value: 1

  PrintedAt:
      type: datetime
      docs: The date and time when the ticket was printed
      examples:
        - name: ExamplePrintedAt
          value: "2024-10-11T12:13:00Z"

  StartDate:
    type: date
    docs: A date to use as a starting date of a period for the schedule search. 
    examples:
      - name: ExampleScheduleFromDate
        value: "2025-01-31"

  EndDate:
    type: date
    docs: A date to use as a ending date of a period for the schedule search. 
    examples:
      - name: ExampleScheduleToDate
        value: "2025-03-31"

  InitialCapacity:
    type: integer
    docs: The initial capacity for the schedule. Note that this number can be 0 which means there is no capacity specified.

  ScheduleCode:
    type: string
    docs: A unique code that identifies a specific admission schedule.
    examples:
      - name: ExampleScheduleCastle
        value: "EVENT1"
  
  Duration:
    type: integer
    docs: The duration of the schedule in seconds.
    examples:
      - name: ExampleDuration
        value: 10800
  
  StartTime:
    type: string
    docs: The time when time slot starts.
    examples:
      - name: ExampleStartTime
        value: "09:00"
  
  EndTime:
    type: string
    docs: The time when time slot ends.
    examples:
      - name: ExampleEndTime
        value: "12:00"

  ScheduleDescription:
    type: string
    docs: A description of the schedule.
    examples:
      - name: ExampleScheduleDescription
        value: "Morning schedule"

  TicketAccessEventTypeEnum:
    enum:
      - initialEntry
      - reservation
      - admitted
      - departed
      - consumed
      - canceledAdmission
      - payment
      - prePaid
      - postPaid
      - canceledReservation
      - unknown

  TicketAccessEventType:
      type: TicketAccessEventTypeEnum
      docs: 
        The types of events that can occur for a ticket.