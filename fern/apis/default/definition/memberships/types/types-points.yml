# fern/apis/default/definition/memberships/types/types-points.yml

types:
  AuthorizationCode:
    type: string
    docs: A unique identifier for the authorized points transaction.
    examples:
      - name: ExampleAuthorizationCode
        value: "362FB68C444E41D691FF19EE470B30A1"

  TransactionId:
    type: uuid
    docs: A unique identifier for a points transaction.
    examples:
      - name: ExampleTransactionId
        value: "a1b2c3d4-e5f6-a7b8-c9d0-e1f2a3b4c5d6"

  PointsBalance:
    docs: Represents the current loyalty points balance for a membership.
    properties:
      balance: integer
      valueAsCurrency: integer
      currencyCode: string
    examples:
      - name: ExamplePointsBalance
        value:
          balance: 1500
          valueAsCurrency: 150
          currencyCode: "DKK"

  ExternalReferenceNo:
    type: string
    docs: Your external reference number, such as a POS Receipt number, invoice number etc.
    examples:
      - name: ExternalReferenceNoExample
        value: "a1b2c3d4-e5f6-a7b8-c9d0-e1f2a3b4c5d6"

  ExternalSystemIdentifier:
    type: string
    docs: An identifier of your external system. This together with the entra app name identifies the external system that is making the operation.
    examples:
      - name: ExternalSystemIdentifierExample
        value: "SHOPIFY_B2C_CHANNEL"

  ExternalSystemUserIdentifier:
    type: optional<string>
    docs: An identifier for the user in the external system, e.g. a POS UnitId, a salesperson code in an external POS or a user ID in a customer support tool.
    examples:
      - name: ExternalSystemUserIdentifierExample
        value: "JOHN_DOE"

  ExternalBusinessUnitIdentifier:
    type: optional<string>
    docs: An identifier for the business unit of the external system.
    examples:
      - name: ExternalExternalBusinessUnitIdentifier
        value: "My businesss unit"

  PointTransactionState:
    enum:
      - AUTHORIZED
      - FINALIZED
      - CANCELLED

  AuthorizePointsType:
    enum:
      - DEPOSIT
      - WITHDRAW

  AuthorizePointsRequest:
    docs: Request to reserve a withdrawal or deposit of points that will be finalized later.
    properties:
      requestId:
        type: uuid
        docs: A unique identifier for the request. If you send the same requestId twice, it will be guaranteed to only trigger once.
      type:
        type: AuthorizePointsType
        docs: The type of the request.
      pointsToReserve:
        type: integer
        docs: The positive number of points to reserve. Set type to withdrawal to deduct points.
      reason:
        type: string
        docs: A description of why the points are being reserved.
      timeoutPeriod:
        type: optional<integer>
        docs: The duration in minutes for which the authorization is valid.
      externalReferenceNo: ExternalReferenceNo
      externalSystemIdentifier: ExternalSystemIdentifier
      externalSystemUserIdentifier: ExternalSystemUserIdentifier
      externalBusinessUnitIdentifier: ExternalBusinessUnitIdentifier
    examples:
      - name: ExampleAuthorizePointsRequest
        value:
          requestId: "11aa22bb-33cc-44dd-55ee-66ff77aa88bb"
          type: WITHDRAW
          pointsToReserve: 200
          reason: "Payment in POS sale"
          timeoutPeriod: 300
          externalReferenceNo: "RCPT-582399102"
          externalSystemIdentifier: "BCTenant-POSStore"
          externalSystemUserIdentifier: "SalespersonCode"
          externalBusinessUnitIdentifier: $ExternalBusinessUnitIdentifier.ExternalExternalBusinessUnitIdentifier
      - name: ExampleAuthorizePointsAssignmentRequest
        value:
          requestId: "11aa22bb-33cc-44dd-55ee-66ff77aa88bb"
          type: DEPOSIT
          pointsToReserve: 100
          reason: "Assigned points as apology for order delay"
          timeoutPeriod: 300
          externalReferenceNo: "TICKET-8245924"
          externalSystemIdentifier: "Shopify-Gorgias"
          externalBusinessUnitIdentifier: $ExternalBusinessUnitIdentifier.ExternalExternalBusinessUnitIdentifier
          externalSystemUserIdentifier: "550e8400-e29b-41d4-a716-446655440000"

  AuthorizePointsResponse:
    docs: Response containing the details of a successful point authorization.
    properties:
      authorizationCode: 
          type: string
          docs: A unique identifier for a points transaction to be used for Finalize or Cancel the points transaction. Will not be returned if autoFinalize is set to true.
      expiresAt: 
          type: datetime
          docs: The date and time when the authorization expires if a timeoutPeriod is specified in the request.
    examples:
      - name: ExampleAuthPointsResponse
        value:
          authorizationCode: $AuthorizationCode.ExampleAuthorizationCode
          expiresAt: "2025-06-23T12:05:00Z"

  CancelAuthorizationRequest:
    docs: Request to cancel point authorization instead of finalizing it.
    properties:
      authorizationCode: AuthorizationCode
    examples:
      - name: ExampleCancelAuthorizationRequest
        value:
          authorizationCode: $AuthorizationCode.ExampleAuthorizationCode

  CancelPointsResponse:
    docs: Response from a successful points cancellation.
    properties:
      newBalance:
        type: integer
        docs: The new points balance after the finalization.
    examples:
      - name: ExampleCancelPointsResponse
        value:
          newBalance: 1500

  FinalizePointsRequest:
    docs: Request to finalize a previously reserved points transaction.
    properties:
      authorizationCode: AuthorizationCode
    examples:
      - name: ExampleFinalizePointsRequest
        value:
          authorizationCode: $AuthorizationCode.ExampleAuthorizationCode

  FinalizePointsResponse:
    docs: Response from a successful points finalization.
    properties:
      status: PointTransactionState
      newBalance:
        type: integer
        docs: The new points balance after the finalization.
    examples:
      - name: ExampleFinalizePointsResponse
        value:
          status: FINALIZED
          newBalance: 1300

  PointTransactionType:
    docs: The type of the point transaction entry.
    enum:
      - SALE
      - REFUND
      - WITHDRAWAL
      - DEPOSIT
      - EXPIRED
      - SYNCHRONIZATION
      - RESERVE
      - CAPTURE
      - RESERVATION_CANCELLED

  PointTransaction:
    docs: Represents a single transaction in the points history of a membership.
    properties:
      entryNo:
        type: integer
        docs: The unique, sequential number for the points ledger entry.
      postingDate:
        type: date
        docs: The date the transaction was posted.
      type:
        type: PointTransactionType
        docs: The type of transaction that occurred.
      description:
        type: string
        docs: A description of the transaction.
      externalReferenceNo:
        type: string
        docs: The document number associated with this transaction (e.g., receipt number).
      externalSystemIdentifier:
        type: string
      externalSystemUserIdentifier:
        type: string
      points:
        type: integer
        docs: The net change in points for this transaction. A positive value indicates points were added; a negative value indicates points were spent.
      transactionId:
        type: TransactionId
      externalRequestId:
        type: string
    examples:
      - name: ExampleSaleTransaction
        value:
          entryNo: 54321
          postingDate: "2025-06-23"
          type: SALE
          description: "Purchase of items in a POS sale"
          externalReferenceNo: "POS-585298329"
          externalSystemIdentifier: "TenantName-CompanyName-POSStoreID"
          externalSystemUserIdentifier: "JACK_BAUER"
          points: 150
          transactionId: "550e8400-e29b-41d4-a716-446655440000"
          externalRequestId: "f47ac10b-58cc-4372-a567-0e02b2c3d479"

  PointsHistoryResponse:
    docs: A list of point transactions for a membership.
    properties:
      history: list<PointTransaction>
    examples:
      - name: ExamplePointsHistory
        value:
          history:
            - $PointTransaction.ExampleSaleTransaction

  RegisterSaleRequest:
    docs: A sale transaction for a membership.
    properties:
      requestId:
        type: uuid
        docs: A unique identifier for the request. If you send the same requestId twice, it will be guaranteed to only trigger once.
      externalReferenceNo: ExternalReferenceNo
      externalSystemIdentifier: ExternalSystemIdentifier
      externalSystemUserIdentifier: ExternalSystemUserIdentifier
      externalBusinessUnitIdentifier: ExternalBusinessUnitIdentifier
      items: optional<list<RegisterSalesItem>>
      reservations: optional<list<RegisterSalesReservation>>
    examples:
      - name: ExampleRegisterSale
        value:
          requestId: "4939d553-5b7d-434c-9c64-2f1b8620ece5"
          externalReferenceNo: "8969718092"
          externalSystemIdentifier: "BCTenant-POSStore"
          externalSystemUserIdentifier: "SalespersonCode"
          externalBusinessUnitIdentifier: $ExternalBusinessUnitIdentifier.ExternalExternalBusinessUnitIdentifier
          items: 
          - $RegisterSalesItem.ExampleRegisterSalesItems 
          reservations: 
          - $RegisterSalesReservation.ExampleRegisterSalesReservation


  RegisterSalesItem:
    docs: A sale line in a sale being registered to earn points.
    properties:
      itemCode: 
        type: string
        docs: An ideniftication of the item
      pointsEarned: 
        type: integer
        docs: Points earned by the sold item. For deduction of points use a negative value
      variantCode: optional<string>
      quantity: optional<double>
      description: optional<string>
      amountInclVAT: 
        type: optional<double>
        docs: The amount including VAT in system currency
    examples:
      - name : ExampleRegisterSalesItems
        value:
          itemCode: "I52892"
          variantCode: "V9529"
          pointsEarned: 12
          quantity: 2.00
          description: "Item Description"
          amountInclVAT: 120.00

  RegisterSalesReservation:
    docs: A reservation to finalize.
    properties:
      authorizationCode: 
        type: string
        docs: A authorization code of a previously authorized reservation
    examples:
      - name : ExampleRegisterSalesReservation
        value:
          authorizationCode: $AuthorizationCode.ExampleAuthorizationCode

  RegisterSaleResponse:
    docs: A response for a successful post of a sale with points
    properties:
      pointsEarned: 
        type: integer
        docs: The total points earned by the transaction
      pointsCaptured: 
        type: integer
        docs: the total amount of points captured by the transaction
      newBalance: 
        type: integer
        docs: The points balance on the membership after the transaction
    examples:
      - name: ExampleRegisterSaleResponse
        value:
          pointsEarned: 12
          pointsCaptured: 200
          newBalance: 1312
