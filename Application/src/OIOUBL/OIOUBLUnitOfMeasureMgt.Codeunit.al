codeunit 6060018 "NPR OIOUBL Unit Of Measure Mgt"
{
    Access = Internal;

    var
        IntCodeDictionary: Dictionary of [Code[10], Text];
        IntCodeLoaded: Boolean;

    procedure ValidateUnitOfMeasureSetup()
    var
        UnitofMeasure: Record "Unit of Measure";
        OIOUBLUnitCode: Code[10];
        AllValidMsg: Label 'All %1 have valid codes of OIOUBL';
        InValidMsg: Label 'Shown %1 have invalid codes for OIOUBL. Please update the %2.';
    begin
        if not UnitofMeasure.FindSet() then
            exit;
        LoadInternationalCodeList();
        repeat
            if UnitofMeasure."International Standard Code" <> '' then
                OIOUBLUnitCode := UnitofMeasure."International Standard Code"
            else
                OIOUBLUnitCode := UnitofMeasure.Code;
            if not IntCodeDictionary.ContainsKey(OIOUBLUnitCode) then
                UnitofMeasure.Mark(true);
        until UnitofMeasure.Next() = 0;
        UnitofMeasure.MarkedOnly(true);
        if not UnitofMeasure.IsEmpty then begin
            Message(InValidMsg, UnitofMeasure.TableCaption, UnitofMeasure.FieldCaption("International Standard Code"));
            Page.RunModal(0, UnitofMeasure);
        end else
            Message(AllValidMsg, UnitofMeasure.TableCaption);
    end;

    procedure ValideUnitCodes(UnitCodes: List of [Text]; var ValidUnitCodes: List of [Text]; var InvalidUnitCodes: List of [Text])
    var
        UnitCode: Text;
        IsValid: Boolean;
    begin
        if UnitCodes.Count = 0 then
            exit;
        LoadInternationalCodeList();

        foreach UnitCode in UnitCodes do begin
            IsValid := StrLen(UnitCode) <= 10;
            if IsValid then
                IsValid := IntCodeDictionary.ContainsKey(UnitCode);
            if IsValid then
                ValidUnitCodes.Add(UnitCode)
            else
                InvalidUnitCodes.Add(UnitCode);
        end;
    end;

    local procedure GetAndTestUoMCode(UnitOfMeasure: Record "Unit of Measure"): Text;
    var
        OIOUBLSetup: Record "NPR OIOUBL Setup";
        InternationalUOMCode: Code[10];
        InvalidInternationCodeErr: Label '%1 ''%2'': ''%3'' is not a valid value for OIOUBL', Comment = '%1 - tablename, %2 - value, %3 - international UOM COde';
    begin
        if not OIOUBLSetup.IsOIOUBLInstalled() then
            exit;
        if UnitOfMeasure.Code = '' then
            exit('EA');
        if UnitOfMeasure."International Standard Code" <> '' then
            InternationalUOMCode := UnitOfMeasure."International Standard Code"
        else
            InternationalUOMCode := UnitOfMeasure.Code;
        LoadInternationalCodeList();
        if not IntCodeDictionary.ContainsKey(InternationalUOMCode) then
            Error(InvalidInternationCodeErr, UnitOfMeasure.TableCaption, UnitOfMeasure.Code, InternationalUOMCode);
        exit(InternationalUOMCode);
    end;

    local procedure LoadInternationalCodeList()
    begin
        if IntCodeLoaded then
            exit;
        IntCodeLoaded := true;
        IntCodeDictionary.Add('04', 'small spray');
        IntCodeDictionary.Add('05', 'lift');
        IntCodeDictionary.Add('08', 'heat lot');
        IntCodeDictionary.Add('10', 'group');
        IntCodeDictionary.Add('11', 'outfit');
        IntCodeDictionary.Add('13', 'ration');
        IntCodeDictionary.Add('14', 'shot');
        IntCodeDictionary.Add('15', 'stick');
        IntCodeDictionary.Add('16', 'hundred fifteen kg drum');
        IntCodeDictionary.Add('17', 'hundred lb drum');
        IntCodeDictionary.Add('18', 'fiftyfive gallon (US) drum');
        IntCodeDictionary.Add('19', 'tank truck');
        IntCodeDictionary.Add('20', 'twenty foot container');
        IntCodeDictionary.Add('21', 'forty foot container');
        IntCodeDictionary.Add('22', 'decilitre per gram');
        IntCodeDictionary.Add('23', 'gram per cubic centimetre');
        IntCodeDictionary.Add('24', 'theoretical pound');
        IntCodeDictionary.Add('25', 'gram per square centimetre');
        IntCodeDictionary.Add('26', 'actual ton');
        IntCodeDictionary.Add('27', 'theoretical ton');
        IntCodeDictionary.Add('28', 'kilogram per square metre');
        IntCodeDictionary.Add('29', 'pound per thousand square feet');
        IntCodeDictionary.Add('30', 'horse power day per air dry metric ton');
        IntCodeDictionary.Add('31', 'catch weight');
        IntCodeDictionary.Add('32', 'kilogram per air dry metric ton');
        IntCodeDictionary.Add('33', 'kilopascal square metres per gram');
        IntCodeDictionary.Add('34', 'kilopascals per millimetre');
        IntCodeDictionary.Add('35', 'millilitres per square centimetre second');
        IntCodeDictionary.Add('36', 'cubic feet per minute per square foot');
        IntCodeDictionary.Add('37', 'ounce per square foot');
        IntCodeDictionary.Add('38', 'ounces per square foot per 0,01 inch');
        IntCodeDictionary.Add('40', 'millilitre per second');
        IntCodeDictionary.Add('41', 'millilitre per minute');
        IntCodeDictionary.Add('43', 'super bulk bag');
        IntCodeDictionary.Add('44', 'fivehundred kg bulk bag');
        IntCodeDictionary.Add('45', 'threehundred kg bulk bag');
        IntCodeDictionary.Add('46', 'fifty lb bulk bag');
        IntCodeDictionary.Add('47', 'fifty lb bag');
        IntCodeDictionary.Add('48', 'bulk car load');
        IntCodeDictionary.Add('53', 'theoretical kilograms');
        IntCodeDictionary.Add('54', 'theoretical tonne');
        IntCodeDictionary.Add('56', 'sitas');
        IntCodeDictionary.Add('57', 'mesh');
        IntCodeDictionary.Add('58', 'net kilogram');
        IntCodeDictionary.Add('59', 'part per million');
        IntCodeDictionary.Add('60', 'percent weight');
        IntCodeDictionary.Add('61', 'part per billion (US)');
        IntCodeDictionary.Add('62', 'percent per 1000 hour');
        IntCodeDictionary.Add('63', 'failure rate in time');
        IntCodeDictionary.Add('64', 'pound per square inch, gauge');
        IntCodeDictionary.Add('66', 'oersted');
        IntCodeDictionary.Add('69', 'test specific scale');
        IntCodeDictionary.Add('71', 'volt ampere per pound');
        IntCodeDictionary.Add('72', 'watt per pound');
        IntCodeDictionary.Add('73', 'ampere tum per centimetre');
        IntCodeDictionary.Add('74', 'millipascal');
        IntCodeDictionary.Add('76', 'gauss');
        IntCodeDictionary.Add('77', 'milli-inch');
        IntCodeDictionary.Add('78', 'kilogauss');
        IntCodeDictionary.Add('80', 'pounds per square inch absolute');
        IntCodeDictionary.Add('81', 'henry');
        IntCodeDictionary.Add('84', 'kilopound per square inch');
        IntCodeDictionary.Add('85', 'foot pound-force');
        IntCodeDictionary.Add('87', 'pound per cubic foot');
        IntCodeDictionary.Add('89', 'poise');
        IntCodeDictionary.Add('90', 'Saybold universal second');
        IntCodeDictionary.Add('91', 'stokes');
        IntCodeDictionary.Add('92', 'calorie per cubic centimetre');
        IntCodeDictionary.Add('93', 'calorie per gram');
        IntCodeDictionary.Add('94', 'curl unit');
        IntCodeDictionary.Add('95', 'twenty thousand gallon (US) tankcar');
        IntCodeDictionary.Add('96', 'ten thousand gallon (US) tankcar');
        IntCodeDictionary.Add('97', 'ten kg drum');
        IntCodeDictionary.Add('98', 'fifteen kg drum');
        IntCodeDictionary.Add('1A', 'car mile');
        IntCodeDictionary.Add('1B', 'car count');
        IntCodeDictionary.Add('1C', 'locomotive count');
        IntCodeDictionary.Add('1D', 'caboose count');
        IntCodeDictionary.Add('1E', 'empty car');
        IntCodeDictionary.Add('1F', 'train mile');
        IntCodeDictionary.Add('1G', 'fuel usage gallon (US)');
        IntCodeDictionary.Add('1H', 'caboose mile');
        IntCodeDictionary.Add('1I', 'fixed rate');
        IntCodeDictionary.Add('1J', 'ton mile');
        IntCodeDictionary.Add('1K', 'locomotive mile');
        IntCodeDictionary.Add('1L', 'total car count');
        IntCodeDictionary.Add('1M', 'total car mile');
        IntCodeDictionary.Add('1X', 'quarter mile');
        IntCodeDictionary.Add('2A', 'radian per second');
        IntCodeDictionary.Add('2B', 'radian per second squared');
        IntCodeDictionary.Add('2C', 'røntgen');
        IntCodeDictionary.Add('2I', 'British thermal unit per hour');
        IntCodeDictionary.Add('2J', 'cubic centimetre per second');
        IntCodeDictionary.Add('2K', 'cubic foot per hour');
        IntCodeDictionary.Add('2L', 'cubic foot per minute');
        IntCodeDictionary.Add('2M', 'centimetre per second');
        IntCodeDictionary.Add('2N', 'decibel');
        IntCodeDictionary.Add('2P', 'kilobyte');
        IntCodeDictionary.Add('2Q', 'kilobecquerel');
        IntCodeDictionary.Add('2R', 'kilocurie');
        IntCodeDictionary.Add('2U', 'megagram');
        IntCodeDictionary.Add('2V', 'megagram per hour');
        IntCodeDictionary.Add('2W', 'bin');
        IntCodeDictionary.Add('2X', 'metre per minute');
        IntCodeDictionary.Add('2Y', 'millirøntgen');
        IntCodeDictionary.Add('2Z', 'millivolt');
        IntCodeDictionary.Add('3B', 'megajoule');
        IntCodeDictionary.Add('3C', 'manmonth');
        IntCodeDictionary.Add('3E', 'pound per pound of product');
        IntCodeDictionary.Add('3G', 'pound per piece of product');
        IntCodeDictionary.Add('3H', 'kilogram per kilogram of product');
        IntCodeDictionary.Add('3I', 'kilogram per piece of product');
        IntCodeDictionary.Add('4A', 'bobbin');
        IntCodeDictionary.Add('4B', 'cap');
        IntCodeDictionary.Add('4C', 'centistokes');
        IntCodeDictionary.Add('4E', 'twenty pack');
        IntCodeDictionary.Add('4G', 'microlitre');
        IntCodeDictionary.Add('4H', 'micrometre (micron)');
        IntCodeDictionary.Add('4K', 'milliampere');
        IntCodeDictionary.Add('4L', 'megabyte');
        IntCodeDictionary.Add('4M', 'milligram per hour');
        IntCodeDictionary.Add('4N', 'megabecquerel');
        IntCodeDictionary.Add('4O', 'microfarad');
        IntCodeDictionary.Add('4P', 'newton per metre');
        IntCodeDictionary.Add('4Q', 'ounce inch');
        IntCodeDictionary.Add('4R', 'ounce foot');
        IntCodeDictionary.Add('4T', 'picofarad');
        IntCodeDictionary.Add('4U', 'pound per hour');
        IntCodeDictionary.Add('4W', 'ton(US) per hour');
        IntCodeDictionary.Add('4X', 'kilolitre per hour');
        IntCodeDictionary.Add('5A', 'barrel per minute');
        IntCodeDictionary.Add('5B', 'batch');
        IntCodeDictionary.Add('5C', 'gallon(US) per thousand');
        IntCodeDictionary.Add('5E', 'MMSCF/day');
        IntCodeDictionary.Add('5F', 'pounds per thousand');
        IntCodeDictionary.Add('5G', 'pump');
        IntCodeDictionary.Add('5H', 'stage');
        IntCodeDictionary.Add('5I', 'standard cubic foot');
        IntCodeDictionary.Add('5J', 'hydraulic horse power');
        IntCodeDictionary.Add('5K', 'count per minute');
        IntCodeDictionary.Add('5P', 'seismic level');
        IntCodeDictionary.Add('5Q', 'seismic line');
        IntCodeDictionary.Add('A1', '15  C calorie');
        IntCodeDictionary.Add('A10', 'ampere square metre per joule second');
        IntCodeDictionary.Add('A11', 'Ångstrøm');
        IntCodeDictionary.Add('A12', 'astronomical unit');
        IntCodeDictionary.Add('A13', 'attojoule');
        IntCodeDictionary.Add('A14', 'barn');
        IntCodeDictionary.Add('A15', 'barn per electron volt');
        IntCodeDictionary.Add('A16', 'barn per steradian electron volt,');
        IntCodeDictionary.Add('A17', 'barn per sterdian');
        IntCodeDictionary.Add('A18', 'becquerel per kilogram');
        IntCodeDictionary.Add('A19', 'becquerel per metre cubed');
        IntCodeDictionary.Add('A2', 'ampere per centimetre');
        IntCodeDictionary.Add('A20', 'British thermal unit per second square foot degree Rankin');
        IntCodeDictionary.Add('A21', 'British thermal unit per pound degree Rankin');
        IntCodeDictionary.Add('A22', 'British thermal unit per second foot degree Rankin');
        IntCodeDictionary.Add('A23', 'British thermal unit per hour square foot degree Rankin');
        IntCodeDictionary.Add('A24', 'candela per square metre');
        IntCodeDictionary.Add('A25', 'cheval vapeur');
        IntCodeDictionary.Add('A26', 'coulomb metre');
        IntCodeDictionary.Add('A27', 'coulomb metre squared per volt');
        IntCodeDictionary.Add('A28', 'coulomb per cubic centimetre');
        IntCodeDictionary.Add('A29', 'coulomb per cubic metre');
        IntCodeDictionary.Add('A3', 'ampere per millimetre');
        IntCodeDictionary.Add('A30', 'coulomb per cubic millimetre');
        IntCodeDictionary.Add('A31', 'coulomb per kilogram second');
        IntCodeDictionary.Add('A32', 'coulomb per mole');
        IntCodeDictionary.Add('A33', 'coulomb per square centimetre');
        IntCodeDictionary.Add('A34', 'coulomb per square metre');
        IntCodeDictionary.Add('A35', 'coulomb per square millimetre');
        IntCodeDictionary.Add('A36', 'cubic centimetre per mole');
        IntCodeDictionary.Add('A37', 'cubic decimetre per mole');
        IntCodeDictionary.Add('A38', 'cubic metre per coulomb');
        IntCodeDictionary.Add('A39', 'cubic metre per kilogram');
        IntCodeDictionary.Add('A4', 'ampere per square centimetre');
        IntCodeDictionary.Add('A40', 'cubic metre per mole');
        IntCodeDictionary.Add('A41', 'ampere per square metre');
        IntCodeDictionary.Add('A42', 'curie per kilogram');
        IntCodeDictionary.Add('A43', 'deadweight tonnage');
        IntCodeDictionary.Add('A44', 'decalitre');
        IntCodeDictionary.Add('A45', 'decametre');
        IntCodeDictionary.Add('A47', 'decitex');
        IntCodeDictionary.Add('A48', 'degree Rankin');
        IntCodeDictionary.Add('A49', 'denier');
        IntCodeDictionary.Add('A5', 'ampere square metre');
        IntCodeDictionary.Add('A50', 'dyn second per cubic centimetre');
        IntCodeDictionary.Add('A51', 'dyne second per centimetre');
        IntCodeDictionary.Add('A52', 'dyne second per centimetre to the fifth');
        IntCodeDictionary.Add('A53', 'electronvolt');
        IntCodeDictionary.Add('A54', 'electronvolt  per metre');
        IntCodeDictionary.Add('A55', 'electronvolt square metre');
        IntCodeDictionary.Add('A56', 'electronvolt square metre per kilogram');
        IntCodeDictionary.Add('A57', 'erg');
        IntCodeDictionary.Add('A58', 'erg per centimetre');
        IntCodeDictionary.Add('A6', 'ampere per square metre kelvin squared');
        IntCodeDictionary.Add('A60', 'erg per cubic centimetre');
        IntCodeDictionary.Add('A61', 'erg per gram');
        IntCodeDictionary.Add('A62', 'erg per gram second');
        IntCodeDictionary.Add('A63', 'erg per second');
        IntCodeDictionary.Add('A64', 'erg per second square centimetre');
        IntCodeDictionary.Add('A65', 'erg per square centimetre second');
        IntCodeDictionary.Add('A66', 'erg square centimetre');
        IntCodeDictionary.Add('A67', 'erg square centimetre per gram');
        IntCodeDictionary.Add('A68', 'exajoule');
        IntCodeDictionary.Add('A69', 'farad per metre');
        IntCodeDictionary.Add('A7', 'ampere per square millimetre');
        IntCodeDictionary.Add('A70', 'femtojoule');
        IntCodeDictionary.Add('A71', 'femtometre');
        IntCodeDictionary.Add('A73', 'foot per second squared');
        IntCodeDictionary.Add('A74', 'foot pound-force per second');
        IntCodeDictionary.Add('A75', 'freight ton');
        IntCodeDictionary.Add('A76', 'gal');
        IntCodeDictionary.Add('A77', 'Gaussian CGS unit of displacement');
        IntCodeDictionary.Add('A78', 'Gaussian CGS unit of electic current');
        IntCodeDictionary.Add('A79', 'Gaussian CGS unit of electric charge');
        IntCodeDictionary.Add('A8', 'ampere second');
        IntCodeDictionary.Add('A80', 'Gaussian CGS unit of electric field strength');
        IntCodeDictionary.Add('A81', 'Gaussian CGS unit of electric polarization');
        IntCodeDictionary.Add('A82', 'Gaussian CGS unit of electric potential');
        IntCodeDictionary.Add('A83', 'Gaussian CGS unit of magnetization');
        IntCodeDictionary.Add('A84', 'gigacoulomb per cubic metre');
        IntCodeDictionary.Add('A85', 'gigaelectronvolt');
        IntCodeDictionary.Add('A86', 'gigahertz');
        IntCodeDictionary.Add('A87', 'gigaohm');
        IntCodeDictionary.Add('A88', 'gigaohm metre');
        IntCodeDictionary.Add('A89', 'gigapascal');
        IntCodeDictionary.Add('A9', 'rate');
        IntCodeDictionary.Add('A90', 'gigawatt');
        IntCodeDictionary.Add('A91', 'gon');
        IntCodeDictionary.Add('A93', 'gram per cubic metre');
        IntCodeDictionary.Add('A94', 'gram per mole');
        IntCodeDictionary.Add('A95', 'gray');
        IntCodeDictionary.Add('A96', 'gray per second');
        IntCodeDictionary.Add('A97', 'hectopascal');
        IntCodeDictionary.Add('A98', 'henry per metre');
        IntCodeDictionary.Add('AA', 'ball');
        IntCodeDictionary.Add('AB', 'bulk pack');
        IntCodeDictionary.Add('ACR', 'acre');
        IntCodeDictionary.Add('AD', 'byte');
        IntCodeDictionary.Add('AE', 'ampere per metre');
        IntCodeDictionary.Add('AH', 'additional minute');
        IntCodeDictionary.Add('AI', 'average minute per call');
        IntCodeDictionary.Add('AJ', 'cop');
        IntCodeDictionary.Add('AK', 'fathom');
        IntCodeDictionary.Add('AL', 'access line');
        IntCodeDictionary.Add('AM', 'ampoule');
        IntCodeDictionary.Add('AMH', 'ampere hour');
        IntCodeDictionary.Add('AMP', 'ampere');
        IntCodeDictionary.Add('ANN', 'year');
        IntCodeDictionary.Add('AP', 'aluminium pound only');
        IntCodeDictionary.Add('APZ', 'troy ounce or apothecaries ounce');
        IntCodeDictionary.Add('AQ', 'anti-hemophilic factor (AHF) unit');
        IntCodeDictionary.Add('AR', 'suppository');
        IntCodeDictionary.Add('ARE', 'are');
        IntCodeDictionary.Add('AS', 'assortment');
        IntCodeDictionary.Add('ASM', 'alcoholic strength by mass');
        IntCodeDictionary.Add('ASU', 'alcoholic strength by volume');
        IntCodeDictionary.Add('ATM', 'standard atmosphere');
        IntCodeDictionary.Add('ATT', 'technical atmosphere');
        IntCodeDictionary.Add('AV', 'capsule');
        IntCodeDictionary.Add('AW', 'powder filled vial');
        IntCodeDictionary.Add('AY', 'assembly');
        IntCodeDictionary.Add('AZ', 'British thermal unit per pound');
        IntCodeDictionary.Add('B0', 'Btu per cubic foot');
        IntCodeDictionary.Add('B1', 'barrel (US) per day');
        IntCodeDictionary.Add('B11', 'joule per kilogram kelvin');
        IntCodeDictionary.Add('B12', 'joule per metre');
        IntCodeDictionary.Add('B13', 'joule per square metre');
        IntCodeDictionary.Add('B14', 'joule per metre to the fourth power');
        IntCodeDictionary.Add('B15', 'joule per mole');
        IntCodeDictionary.Add('B16', 'joule per mole kelvin');
        IntCodeDictionary.Add('B18', 'joule second');
        IntCodeDictionary.Add('B2', 'bunk');
        IntCodeDictionary.Add('B20', 'joule square metre per kilogram');
        IntCodeDictionary.Add('B21', 'kelvin per watt');
        IntCodeDictionary.Add('B22', 'kiloampere');
        IntCodeDictionary.Add('B23', 'kiloampere per square metre');
        IntCodeDictionary.Add('B24', 'kiloampere per metre');
        IntCodeDictionary.Add('B25', 'kilobecquerel per kilogram');
        IntCodeDictionary.Add('B26', 'kilocoulomb');
        IntCodeDictionary.Add('B27', 'kilocoulomb per cubic metre');
        IntCodeDictionary.Add('B28', 'kilocoulomb per square metre');
        IntCodeDictionary.Add('B29', 'kiloelectronvolt');
        IntCodeDictionary.Add('B3', 'batting pound');
        IntCodeDictionary.Add('B31', 'kilogram metre per second');
        IntCodeDictionary.Add('B32', 'kilogram metre squared');
        IntCodeDictionary.Add('B33', 'kilogram metre squared per second');
        IntCodeDictionary.Add('B34', 'kilogram per cubic decimetre');
        IntCodeDictionary.Add('B35', 'kilogram per litre');
        IntCodeDictionary.Add('B36', 'thermochemical calorie per gram');
        IntCodeDictionary.Add('B37', 'kilogram-force');
        IntCodeDictionary.Add('B38', 'kilogram-force metre');
        IntCodeDictionary.Add('B39', 'kilogram-force metre per second');
        IntCodeDictionary.Add('B4', 'barrel, imperial');
        IntCodeDictionary.Add('B40', 'kilogram-force per square metre');
        IntCodeDictionary.Add('B41', 'kilojoule per kelvin');
        IntCodeDictionary.Add('B42', 'kilojoule per kilogram');
        IntCodeDictionary.Add('B43', 'kilojoule per kilogram kelvin');
        IntCodeDictionary.Add('B44', 'kilojoule per mole');
        IntCodeDictionary.Add('B45', 'kilomole');
        IntCodeDictionary.Add('B46', 'kilomole per cubic metre');
        IntCodeDictionary.Add('B47', 'kilonewton');
        IntCodeDictionary.Add('B48', 'kilonewton metre');
        IntCodeDictionary.Add('B49', 'kiloohm');
        IntCodeDictionary.Add('B5', 'billet');
        IntCodeDictionary.Add('B50', 'kiloohm metre');
        IntCodeDictionary.Add('B51', 'kilopond');
        IntCodeDictionary.Add('B52', 'kilosecond');
        IntCodeDictionary.Add('B53', 'kilosiemens');
        IntCodeDictionary.Add('B54', 'kilosiemens per metre');
        IntCodeDictionary.Add('B55', 'kilovolt per metre');
        IntCodeDictionary.Add('B56', 'kiloweber per metre');
        IntCodeDictionary.Add('B57', 'light year');
        IntCodeDictionary.Add('B58', 'litre per mole');
        IntCodeDictionary.Add('B59', 'lumen hour');
        IntCodeDictionary.Add('B6', 'bun');
        IntCodeDictionary.Add('B60', 'lumen per square metre');
        IntCodeDictionary.Add('B61', 'lumen per watt');
        IntCodeDictionary.Add('B62', 'lumen second');
        IntCodeDictionary.Add('B63', 'lux hour');
        IntCodeDictionary.Add('B64', 'lux second');
        IntCodeDictionary.Add('B65', 'maxwell');
        IntCodeDictionary.Add('B66', 'megaampere per square metre');
        IntCodeDictionary.Add('B67', 'megabecquerel per kilogram');
        IntCodeDictionary.Add('B69', 'megacoulomb per cubic metre');
        IntCodeDictionary.Add('B7', 'cycle');
        IntCodeDictionary.Add('B70', 'megacoulomb per square metre');
        IntCodeDictionary.Add('B71', 'megaelectronvolt');
        IntCodeDictionary.Add('B72', 'megagram per cubic metre');
        IntCodeDictionary.Add('B73', 'meganewton');
        IntCodeDictionary.Add('B74', 'meganewton metre');
        IntCodeDictionary.Add('B75', 'megaohm');
        IntCodeDictionary.Add('B76', 'megaohm metre');
        IntCodeDictionary.Add('B77', 'megasiemens per metre');
        IntCodeDictionary.Add('B78', 'megavolt');
        IntCodeDictionary.Add('B79', 'megavolt per metre');
        IntCodeDictionary.Add('B8', 'joule per cubic metre');
        IntCodeDictionary.Add('B81', 'reciprocal metre squared reciprocal second');
        IntCodeDictionary.Add('B83', 'metre to the fourth power');
        IntCodeDictionary.Add('B84', 'microampere');
        IntCodeDictionary.Add('B85', 'microbar');
        IntCodeDictionary.Add('B86', 'microcoulomb');
        IntCodeDictionary.Add('B87', 'microcoulomb per cubic metre');
        IntCodeDictionary.Add('B88', 'microcoulomb per square metre');
        IntCodeDictionary.Add('B89', 'microfarad per metre');
        IntCodeDictionary.Add('B9', 'batt');
        IntCodeDictionary.Add('B90', 'microhenry');
        IntCodeDictionary.Add('B91', 'microhenry per metre');
        IntCodeDictionary.Add('B92', 'micronewton');
        IntCodeDictionary.Add('B93', 'micronewton metre');
        IntCodeDictionary.Add('B94', 'microohm');
        IntCodeDictionary.Add('B95', 'microohm metre');
        IntCodeDictionary.Add('B96', 'micropascal');
        IntCodeDictionary.Add('B97', 'microradian');
        IntCodeDictionary.Add('B98', 'microsecond');
        IntCodeDictionary.Add('B99', 'microsiemens');
        IntCodeDictionary.Add('BAR', 'bar');
        IntCodeDictionary.Add('BB', 'base box');
        IntCodeDictionary.Add('BD', 'board');
        IntCodeDictionary.Add('BE', 'bundle');
        IntCodeDictionary.Add('BFT', 'board foot');
        IntCodeDictionary.Add('BG', 'bag');
        IntCodeDictionary.Add('BH', 'brush');
        IntCodeDictionary.Add('BHP', 'brake horse power');
        IntCodeDictionary.Add('BIL', 'trillion (US)');
        IntCodeDictionary.Add('BJ', 'bucket');
        IntCodeDictionary.Add('BK', 'basket');
        IntCodeDictionary.Add('BL', 'bale');
        IntCodeDictionary.Add('BLD', 'dry barrel (US)');
        IntCodeDictionary.Add('BLL', 'barrel (US) (petroleum etc.)');
        IntCodeDictionary.Add('BO', 'bottle');
        IntCodeDictionary.Add('BP', 'hundred board feet');
        IntCodeDictionary.Add('BQL', 'becquerel');
        IntCodeDictionary.Add('BR', 'bar');
        IntCodeDictionary.Add('BT', 'bolt');
        IntCodeDictionary.Add('BTU', 'British thermal unit');
        IntCodeDictionary.Add('BUA', 'bushel  (US)');
        IntCodeDictionary.Add('BUI', 'bushel (UK)');
        IntCodeDictionary.Add('BW', 'base weight');
        IntCodeDictionary.Add('BX', 'box');
        IntCodeDictionary.Add('BZ', 'million BTUs');
        IntCodeDictionary.Add('C0', 'call');
        IntCodeDictionary.Add('C1', 'composite product pound (total weight)');
        IntCodeDictionary.Add('C10', 'millifarad');
        IntCodeDictionary.Add('C11', 'milligal');
        IntCodeDictionary.Add('C12', 'milligram per metre');
        IntCodeDictionary.Add('C13', 'milligray');
        IntCodeDictionary.Add('C14', 'millihenry');
        IntCodeDictionary.Add('C15', 'millijoule');
        IntCodeDictionary.Add('C16', 'millimetre per second');
        IntCodeDictionary.Add('C17', 'millimetre squared per second');
        IntCodeDictionary.Add('C18', 'millimole');
        IntCodeDictionary.Add('C19', 'mole per kilogram');
        IntCodeDictionary.Add('C2', 'carset');
        IntCodeDictionary.Add('C20', 'millinewton');
        IntCodeDictionary.Add('C22', 'millinewton per metre');
        IntCodeDictionary.Add('C23', 'milliohm metre');
        IntCodeDictionary.Add('C24', 'millipascal second');
        IntCodeDictionary.Add('C25', 'milliradian');
        IntCodeDictionary.Add('C26', 'millisecond');
        IntCodeDictionary.Add('C27', 'millisiemens');
        IntCodeDictionary.Add('C28', 'millisievert');
        IntCodeDictionary.Add('C29', 'millitesla');
        IntCodeDictionary.Add('C3', 'microvolt per metre');
        IntCodeDictionary.Add('C30', 'millivolt per metre');
        IntCodeDictionary.Add('C31', 'milliwatt');
        IntCodeDictionary.Add('C32', 'milliwatt per square metre');
        IntCodeDictionary.Add('C33', 'milliweber');
        IntCodeDictionary.Add('C34', 'mole');
        IntCodeDictionary.Add('C35', 'mole per cubic decimetre');
        IntCodeDictionary.Add('C36', 'mole per cubic metre');
        IntCodeDictionary.Add('C38', 'mole per litre');
        IntCodeDictionary.Add('C39', 'nanoampere');
        IntCodeDictionary.Add('C4', 'carload');
        IntCodeDictionary.Add('C40', 'nanocoulomb');
        IntCodeDictionary.Add('C41', 'nanofarad');
        IntCodeDictionary.Add('C42', 'nanofarad per metre');
        IntCodeDictionary.Add('C43', 'nanohenry');
        IntCodeDictionary.Add('C44', 'nanohenry per metre');
        IntCodeDictionary.Add('C45', 'nanometre');
        IntCodeDictionary.Add('C46', 'nanoohm metre');
        IntCodeDictionary.Add('C47', 'nanosecond');
        IntCodeDictionary.Add('C48', 'nanotesla');
        IntCodeDictionary.Add('C49', 'nanowatt');
        IntCodeDictionary.Add('C5', 'cost');
        IntCodeDictionary.Add('C50', 'neper');
        IntCodeDictionary.Add('C51', 'neper per second');
        IntCodeDictionary.Add('C52', 'picometre');
        IntCodeDictionary.Add('C53', 'newton metre second');
        IntCodeDictionary.Add('C54', 'newton metre squared  kilogram squared');
        IntCodeDictionary.Add('C55', 'newton per square metre');
        IntCodeDictionary.Add('C56', 'newton per square millimetre');
        IntCodeDictionary.Add('C57', 'newton second');
        IntCodeDictionary.Add('C58', 'newton second per metre');
        IntCodeDictionary.Add('C59', 'octave');
        IntCodeDictionary.Add('C6', 'cell');
        IntCodeDictionary.Add('C60', 'ohm centimetre');
        IntCodeDictionary.Add('C61', 'ohm metre');
        IntCodeDictionary.Add('C62', 'one');
        IntCodeDictionary.Add('C63', 'parsec');
        IntCodeDictionary.Add('C64', 'pascal per kelvin');
        IntCodeDictionary.Add('C65', 'pascal second');
        IntCodeDictionary.Add('C66', 'pascal second per cubic metre');
        IntCodeDictionary.Add('C67', 'pascal second per metre');
        IntCodeDictionary.Add('C68', 'petajoule');
        IntCodeDictionary.Add('C69', 'phon');
        IntCodeDictionary.Add('C7', 'centipoise');
        IntCodeDictionary.Add('C70', 'picoampere');
        IntCodeDictionary.Add('C71', 'picocoulomb');
        IntCodeDictionary.Add('C72', 'picofarad per metre');
        IntCodeDictionary.Add('C73', 'picohenry');
        IntCodeDictionary.Add('C75', 'picowatt');
        IntCodeDictionary.Add('C76', 'picowatt per square metre');
        IntCodeDictionary.Add('C77', 'pound gage');
        IntCodeDictionary.Add('C78', 'pound-force');
        IntCodeDictionary.Add('C8', 'millicoulomb per kilogram');
        IntCodeDictionary.Add('C80', 'rad');
        IntCodeDictionary.Add('C81', 'radian');
        IntCodeDictionary.Add('C82', 'radian meter squared per mole');
        IntCodeDictionary.Add('C83', 'radian metre squared per kilogram');
        IntCodeDictionary.Add('C84', 'radian per metre');
        IntCodeDictionary.Add('C85', 'reciprocal Ångstrøm');
        IntCodeDictionary.Add('C86', 'reciprocal cubic metre');
        IntCodeDictionary.Add('C87', 'reciprocal cubic metre per second');
        IntCodeDictionary.Add('C88', 'reciprocal electron volt per cubic metre');
        IntCodeDictionary.Add('C89', 'reciprocal henry');
        IntCodeDictionary.Add('C9', 'coil group');
        IntCodeDictionary.Add('C90', 'reciprocal joule per cubic metre');
        IntCodeDictionary.Add('C91', 'reciprocal kelvin or kelvin to the power minus one');
        IntCodeDictionary.Add('C92', 'reciprocal metre');
        IntCodeDictionary.Add('C93', 'reciprocal square metre');
        IntCodeDictionary.Add('C94', 'reciprocal minute');
        IntCodeDictionary.Add('C95', 'reciprocal mole');
        IntCodeDictionary.Add('C96', 'reciprocal pascal or pascal to the power minus one');
        IntCodeDictionary.Add('C97', 'reciprocal second');
        IntCodeDictionary.Add('C98', 'reciprocal second per cubic metre');
        IntCodeDictionary.Add('C99', 'reciprocal second per metre squared');
        IntCodeDictionary.Add('CA', 'can');
        IntCodeDictionary.Add('CCT', 'carrying capacity in metric ton');
        IntCodeDictionary.Add('CDL', 'candela');
        IntCodeDictionary.Add('CEL', 'degree Celsius');
        IntCodeDictionary.Add('CEN', 'hundred');
        IntCodeDictionary.Add('CG', 'card');
        IntCodeDictionary.Add('CGM', 'centigram');
        IntCodeDictionary.Add('CH', 'container');
        IntCodeDictionary.Add('CJ', 'cone');
        IntCodeDictionary.Add('CK', 'connector');
        IntCodeDictionary.Add('CKG', 'coulomb per kilogram');
        IntCodeDictionary.Add('CL', 'coil');
        IntCodeDictionary.Add('CLF', 'hundred leave');
        IntCodeDictionary.Add('CLT', 'centilitre');
        IntCodeDictionary.Add('CMK', 'square centimetre');
        IntCodeDictionary.Add('CMQ', 'cubic centimetre');
        IntCodeDictionary.Add('CMT', 'centimetre');
        IntCodeDictionary.Add('CNP', 'hundred pack');
        IntCodeDictionary.Add('CNT', 'cental (UK)');
        IntCodeDictionary.Add('CO', 'carboy');
        IntCodeDictionary.Add('COU', 'coulomb');
        IntCodeDictionary.Add('CQ', 'cartridge');
        IntCodeDictionary.Add('CR', 'crate');
        IntCodeDictionary.Add('CS', 'case');
        IntCodeDictionary.Add('CT', 'carton');
        IntCodeDictionary.Add('CTM', 'metric carat');
        IntCodeDictionary.Add('CU', 'cup');
        IntCodeDictionary.Add('CUR', 'curie');
        IntCodeDictionary.Add('CV', 'cover');
        IntCodeDictionary.Add('CWA', 'hundred pounds (cwt)/hundred weight (US)');
        IntCodeDictionary.Add('CWI', 'hundred weight (UK)');
        IntCodeDictionary.Add('CY', 'cylinder');
        IntCodeDictionary.Add('CZ', 'combo');
        IntCodeDictionary.Add('D1', 'reciprocal second per steradian');
        IntCodeDictionary.Add('D10', 'siemens per metre');
        IntCodeDictionary.Add('D12', 'siemens square metre per mole');
        IntCodeDictionary.Add('D13', 'sievert');
        IntCodeDictionary.Add('D14', 'thousand linear yard');
        IntCodeDictionary.Add('D15', 'sone');
        IntCodeDictionary.Add('D16', 'square centimetre per erg');
        IntCodeDictionary.Add('D17', 'square centimetre per steradian erg');
        IntCodeDictionary.Add('D18', 'metre kelvin');
        IntCodeDictionary.Add('D19', 'square metre kelvin per watt');
        IntCodeDictionary.Add('D2', 'reciprocal second per steradian metre squared');
        IntCodeDictionary.Add('D20', 'square metre per joule');
        IntCodeDictionary.Add('D21', 'square metre per kilogram');
        IntCodeDictionary.Add('D22', 'square metre per mole');
        IntCodeDictionary.Add('D23', 'pen gram (protein)');
        IntCodeDictionary.Add('D24', 'square metre per steradian');
        IntCodeDictionary.Add('D25', 'square metre per steradian joule');
        IntCodeDictionary.Add('D26', 'square metre per volt second');
        IntCodeDictionary.Add('D27', 'steradian');
        IntCodeDictionary.Add('D28', 'syphon');
        IntCodeDictionary.Add('D29', 'terahertz');
        IntCodeDictionary.Add('D30', 'terajoule');
        IntCodeDictionary.Add('D31', 'terawatt');
        IntCodeDictionary.Add('D32', 'terawatt hour');
        IntCodeDictionary.Add('D33', 'tesla');
        IntCodeDictionary.Add('D34', 'tex');
        IntCodeDictionary.Add('D35', 'thermochemical calorie');
        IntCodeDictionary.Add('D37', 'thermochemical calorie per gram kelvin');
        IntCodeDictionary.Add('D38', 'thermochemical calorie per second centimetre kelvin');
        IntCodeDictionary.Add('D39', 'thermochemical calorie per second square centimetre kelvin');
        IntCodeDictionary.Add('D40', 'thousand litre');
        IntCodeDictionary.Add('D41', 'tonne per cubic metre');
        IntCodeDictionary.Add('D42', 'tropical year');
        IntCodeDictionary.Add('D43', 'unified atomic mass unit');
        IntCodeDictionary.Add('D44', 'var');
        IntCodeDictionary.Add('D45', 'volt  squared per kelvin squared');
        IntCodeDictionary.Add('D46', 'volt - ampere');
        IntCodeDictionary.Add('D47', 'volt per centimetre');
        IntCodeDictionary.Add('D48', 'volt per kelvin');
        IntCodeDictionary.Add('D49', 'millivolt per kelvin');
        IntCodeDictionary.Add('D5', 'kilogram per square centimeter');
        IntCodeDictionary.Add('D50', 'volt per metre');
        IntCodeDictionary.Add('D51', 'volt per millimetre');
        IntCodeDictionary.Add('D52', 'watt per kelvin');
        IntCodeDictionary.Add('D53', 'watt per metre kelvin');
        IntCodeDictionary.Add('D54', 'watt per square metre');
        IntCodeDictionary.Add('D55', 'watt per square metre kelvin');
        IntCodeDictionary.Add('D56', 'watt per square metre kelvin to the fourth power');
        IntCodeDictionary.Add('D57', 'watt per steradian');
        IntCodeDictionary.Add('D58', 'watt per steradian square metre');
        IntCodeDictionary.Add('D59', 'weber per metre');
        IntCodeDictionary.Add('D6', 'røntgen per second');
        IntCodeDictionary.Add('D60', 'weber per millimetre');
        IntCodeDictionary.Add('D61', 'minute');
        IntCodeDictionary.Add('D62', 'second');
        IntCodeDictionary.Add('D63', 'book');
        IntCodeDictionary.Add('D64', 'block');
        IntCodeDictionary.Add('D65', 'round');
        IntCodeDictionary.Add('D66', 'cassette');
        IntCodeDictionary.Add('D67', 'dollar per hour');
        IntCodeDictionary.Add('D69', 'inch to the fourth power');
        IntCodeDictionary.Add('D7', 'sandwich');
        IntCodeDictionary.Add('D70', 'International Table (IT) calorie');
        IntCodeDictionary.Add('D71', 'International Table (IT) calorie per second centimetre kelvin');
        IntCodeDictionary.Add('D72', 'International Table (IT) calorie per second square centimetre kelvin');
        IntCodeDictionary.Add('D73', 'joule square metre');
        IntCodeDictionary.Add('D74', 'kilogram per mole');
        IntCodeDictionary.Add('D75', 'International Table (IT) calorie per gram');
        IntCodeDictionary.Add('D76', 'International Table (IT) calorie per gram kelvin');
        IntCodeDictionary.Add('D77', 'megacoulomb');
        IntCodeDictionary.Add('D79', 'beam');
        IntCodeDictionary.Add('D8', 'draize score');
        IntCodeDictionary.Add('D80', 'microwatt');
        IntCodeDictionary.Add('D81', 'microtesla');
        IntCodeDictionary.Add('D82', 'microvolt');
        IntCodeDictionary.Add('D83', 'millinewton metre');
        IntCodeDictionary.Add('D85', 'microwatt per square metre');
        IntCodeDictionary.Add('D86', 'millicoulomb');
        IntCodeDictionary.Add('D87', 'millimole per kilogram');
        IntCodeDictionary.Add('D88', 'millicoulomb per cubic metre');
        IntCodeDictionary.Add('D89', 'millicoulomb per square metre');
        IntCodeDictionary.Add('D9', 'dyne per square centimeter');
        IntCodeDictionary.Add('D90', 'cubic metre (net)');
        IntCodeDictionary.Add('D91', 'rem');
        IntCodeDictionary.Add('D92', 'band');
        IntCodeDictionary.Add('D93', 'second per cubic metre');
        IntCodeDictionary.Add('D94', 'second per radian cubic metre');
        IntCodeDictionary.Add('D95', 'joule per gram');
        IntCodeDictionary.Add('D96', 'pound gross');
        IntCodeDictionary.Add('D97', 'pallet/unit load');
        IntCodeDictionary.Add('D98', 'mass pound');
        IntCodeDictionary.Add('D99', 'sleeve');
        IntCodeDictionary.Add('DAA', 'decare');
        IntCodeDictionary.Add('DAD', 'ten day');
        IntCodeDictionary.Add('DAY', 'day');
        IntCodeDictionary.Add('DB', 'dry pound');
        IntCodeDictionary.Add('DC', 'disk (disc)');
        IntCodeDictionary.Add('DD', 'degree');
        IntCodeDictionary.Add('DE', 'deal');
        IntCodeDictionary.Add('DEC', 'decade');
        IntCodeDictionary.Add('DG', 'decigram');
        IntCodeDictionary.Add('DI', 'dispenser');
        IntCodeDictionary.Add('DJ', 'decagram');
        IntCodeDictionary.Add('DLT', 'decilitre');
        IntCodeDictionary.Add('DMK', 'square decimetre');
        IntCodeDictionary.Add('DMQ', 'cubic decimetre');
        IntCodeDictionary.Add('DMT', 'decimetre');
        IntCodeDictionary.Add('DN', 'decinewton metre');
        IntCodeDictionary.Add('DPC', 'dozen piece');
        IntCodeDictionary.Add('DPR', 'dozen pair');
        IntCodeDictionary.Add('DPT', 'displacement tonnage');
        IntCodeDictionary.Add('DQ', 'data record');
        IntCodeDictionary.Add('DR', 'drum');
        IntCodeDictionary.Add('DRA', 'dram (US)');
        IntCodeDictionary.Add('DRI', 'dram (UK)');
        IntCodeDictionary.Add('DRL', 'dozen roll');
        IntCodeDictionary.Add('DRM', 'drachm (UK)');
        IntCodeDictionary.Add('DS', 'display');
        IntCodeDictionary.Add('DT', 'dry ton');
        IntCodeDictionary.Add('DTN', 'decitonne');
        IntCodeDictionary.Add('DU', 'dyne');
        IntCodeDictionary.Add('DWT', 'pennyweight');
        IntCodeDictionary.Add('DX', 'dyne per centimetre');
        IntCodeDictionary.Add('DY', 'directory book');
        IntCodeDictionary.Add('DZN', 'dozen');
        IntCodeDictionary.Add('DZP', 'dozen pack');
        IntCodeDictionary.Add('E2', 'belt');
        IntCodeDictionary.Add('E3', 'trailer');
        IntCodeDictionary.Add('E4', 'gross kilogram');
        IntCodeDictionary.Add('E5', 'metric long ton');
        IntCodeDictionary.Add('EA', 'each');
        IntCodeDictionary.Add('EB', 'electronic mail box');
        IntCodeDictionary.Add('EC', 'each per month');
        IntCodeDictionary.Add('EP', 'eleven pack');
        IntCodeDictionary.Add('EQ', 'equivalent gallon');
        IntCodeDictionary.Add('EV', 'envelope');
        IntCodeDictionary.Add('F1', 'thousand cubic feet per day');
        IntCodeDictionary.Add('F9', 'fibre per cubic centimetre of air');
        IntCodeDictionary.Add('FAH', 'degree Fahrenheit');
        IntCodeDictionary.Add('FAR', 'farad');
        IntCodeDictionary.Add('FB', 'field');
        IntCodeDictionary.Add('FC', 'thousand cubic feet');
        IntCodeDictionary.Add('FD', 'million particle per cubic foot');
        IntCodeDictionary.Add('FE', 'track foot');
        IntCodeDictionary.Add('FF', 'hundred cubic metre');
        IntCodeDictionary.Add('FG', 'transdermal patch');
        IntCodeDictionary.Add('FH', 'micromole');
        IntCodeDictionary.Add('FL', 'flake ton');
        IntCodeDictionary.Add('FM', 'million cubic feet');
        IntCodeDictionary.Add('FOT', 'foot');
        IntCodeDictionary.Add('FP', 'pound per square foot');
        IntCodeDictionary.Add('FR', 'foot per minute');
        IntCodeDictionary.Add('FS', 'foot per second');
        IntCodeDictionary.Add('FTK', 'square foot');
        IntCodeDictionary.Add('FTQ', 'cubic foot');
        IntCodeDictionary.Add('G2', 'US gallon per minute');
        IntCodeDictionary.Add('G3', 'Imperial gallon per minute');
        IntCodeDictionary.Add('G7', 'microfiche sheet');
        IntCodeDictionary.Add('GB', 'gallon (US) per day');
        IntCodeDictionary.Add('GBQ', 'gigabecquerel');
        IntCodeDictionary.Add('GC', 'gram per 100 gram');
        IntCodeDictionary.Add('GD', 'gross barrel');
        IntCodeDictionary.Add('GE', 'pound per gallon (US)');
        IntCodeDictionary.Add('GF', 'gram per metre (gram per 100 centimetres)');
        IntCodeDictionary.Add('GFI', 'gram of fissile isotope');
        IntCodeDictionary.Add('GGR', 'great gross');
        IntCodeDictionary.Add('GH', 'half gallon (US)');
        IntCodeDictionary.Add('GIA', 'gill (US)');
        IntCodeDictionary.Add('GII', 'gill (UK)');
        IntCodeDictionary.Add('GJ', 'gram per millilitre');
        IntCodeDictionary.Add('GK', 'gram per kilogram');
        IntCodeDictionary.Add('GL', 'gram per litre');
        IntCodeDictionary.Add('GLD', 'dry gallon (US)');
        IntCodeDictionary.Add('GLI', 'gallon (UK)');
        IntCodeDictionary.Add('GLL', 'gallon (US)');
        IntCodeDictionary.Add('GM', 'gram per square metre');
        IntCodeDictionary.Add('GN', 'gross gallon');
        IntCodeDictionary.Add('GO', 'milligrams per square metre');
        IntCodeDictionary.Add('GP', 'milligram per cubic metre');
        IntCodeDictionary.Add('GQ', 'microgram per cubic meter');
        IntCodeDictionary.Add('GRM', 'gram');
        IntCodeDictionary.Add('GRN', 'grain');
        IntCodeDictionary.Add('GRO', 'gross');
        IntCodeDictionary.Add('GRT', 'gross register ton');
        IntCodeDictionary.Add('GT', 'gross ton');
        IntCodeDictionary.Add('GV', 'gigajoule');
        IntCodeDictionary.Add('GW', 'gallon per thousand cubic feet');
        IntCodeDictionary.Add('GWH', 'gigawatt hour');
        IntCodeDictionary.Add('GY', 'gross yard');
        IntCodeDictionary.Add('GZ', 'gage system');
        IntCodeDictionary.Add('H1', 'half page - electronic');
        IntCodeDictionary.Add('H2', 'half litre');
        IntCodeDictionary.Add('HA', 'hank');
        IntCodeDictionary.Add('HAR', 'hectare');
        IntCodeDictionary.Add('HBA', 'hectobar');
        IntCodeDictionary.Add('HBX', 'hundred boxe');
        IntCodeDictionary.Add('HC', 'hundred count');
        IntCodeDictionary.Add('HD', 'half dozen');
        IntCodeDictionary.Add('HE', 'hundredth of a carat');
        IntCodeDictionary.Add('HF', 'hundred feet');
        IntCodeDictionary.Add('HGM', 'hectogram');
        IntCodeDictionary.Add('HH', 'hundred cubic feet');
        IntCodeDictionary.Add('HI', 'hundred sheet');
        IntCodeDictionary.Add('HIU', 'hundred international unit');
        IntCodeDictionary.Add('HJ', 'metric horse power');
        IntCodeDictionary.Add('HK', 'hundred kilogram');
        IntCodeDictionary.Add('HL', 'hundred feet (linear)');
        IntCodeDictionary.Add('HLT', 'hectolitre');
        IntCodeDictionary.Add('HM', 'mile per hour');
        IntCodeDictionary.Add('HMQ', 'million cubic metre');
        IntCodeDictionary.Add('HMT', 'hectometre');
        IntCodeDictionary.Add('HN', 'conventional millimetre of mercury');
        IntCodeDictionary.Add('HO', 'hundred troy ounce');
        IntCodeDictionary.Add('HP', 'conventional millimetre of water');
        IntCodeDictionary.Add('HPA', 'hectolitre of pure alcohol');
        IntCodeDictionary.Add('HS', 'hundred square feet');
        IntCodeDictionary.Add('HT', 'half hour');
        IntCodeDictionary.Add('HTZ', 'hertz');
        IntCodeDictionary.Add('HUR', 'hour');
        IntCodeDictionary.Add('HY', 'hundred yard');
        IntCodeDictionary.Add('IA', 'inch pound (pound inch)');
        IntCodeDictionary.Add('IC', 'count per inch');
        IntCodeDictionary.Add('IE', 'person');
        IntCodeDictionary.Add('IF', 'inches of water');
        IntCodeDictionary.Add('II', 'column inch');
        IntCodeDictionary.Add('IL', 'inch per minute');
        IntCodeDictionary.Add('IM', 'impression');
        IntCodeDictionary.Add('INH', 'inch');
        IntCodeDictionary.Add('INK', 'square inch');
        IntCodeDictionary.Add('INQ', 'inch cubed');
        IntCodeDictionary.Add('IP', 'insurance policy');
        IntCodeDictionary.Add('IT', 'count per centimetre');
        IntCodeDictionary.Add('IU', 'inch per second (linear speed)');
        IntCodeDictionary.Add('IV', 'inch per second squared (acceleration)');
        IntCodeDictionary.Add('J2', 'joule per kilogram');
        IntCodeDictionary.Add('JB', 'jumbo');
        IntCodeDictionary.Add('JE', 'joule per kelvin');
        IntCodeDictionary.Add('JG', 'jug');
        IntCodeDictionary.Add('JK', 'megajoule per kilogram');
        IntCodeDictionary.Add('JM', 'megajoule per cubic metre');
        IntCodeDictionary.Add('JO', 'joint');
        IntCodeDictionary.Add('JOU', 'joule');
        IntCodeDictionary.Add('JR', 'jar');
        IntCodeDictionary.Add('K1', 'kilowatt demand');
        IntCodeDictionary.Add('K2', 'kilovolt ampere reactive demand');
        IntCodeDictionary.Add('K3', 'kilovolt ampere reactive hour');
        IntCodeDictionary.Add('K5', 'kilovolt ampere (reactive)');
        IntCodeDictionary.Add('K6', 'kilolitre');
        IntCodeDictionary.Add('KA', 'cake');
        IntCodeDictionary.Add('KB', 'kilocharacter');
        IntCodeDictionary.Add('KBA', 'kilobar');
        IntCodeDictionary.Add('KD', 'kilogram decimal');
        IntCodeDictionary.Add('KEL', 'kelvin');
        IntCodeDictionary.Add('KF', 'kilopacket');
        IntCodeDictionary.Add('KG', 'keg');
        IntCodeDictionary.Add('KGM', 'kilogram');
        IntCodeDictionary.Add('KGS', 'kilogram per second');
        IntCodeDictionary.Add('KHZ', 'kilohertz');
        IntCodeDictionary.Add('KI', 'kilogram per millimetre width');
        IntCodeDictionary.Add('KJ', 'kilosegment');
        IntCodeDictionary.Add('KJO', 'kilojoule');
        IntCodeDictionary.Add('KL', 'kilogram per metre');
        IntCodeDictionary.Add('KMH', 'kilometre per hour');
        IntCodeDictionary.Add('KMK', 'square kilometre');
        IntCodeDictionary.Add('KMQ', 'kilogram per cubic metre');
        IntCodeDictionary.Add('KNI', 'kilogram of nitrogen');
        IntCodeDictionary.Add('KNS', 'kilogram named substance');
        IntCodeDictionary.Add('KNT', 'knot');
        IntCodeDictionary.Add('KO', 'milliequivalence caustic potash per gram of product');
        IntCodeDictionary.Add('KPA', 'kilopascal');
        IntCodeDictionary.Add('KPH', 'kilogram of potassium hydroxide (caustic potash)');
        IntCodeDictionary.Add('KPO', 'kilogram of potassium oxide');
        IntCodeDictionary.Add('KPP', 'kilogram of phosphorus pentoxide (phosphoric anhydride)');
        IntCodeDictionary.Add('KR', 'kilorøntgen');
        IntCodeDictionary.Add('KS', 'thousand pound per square inch');
        IntCodeDictionary.Add('KSD', 'kilogram of substance 90 % dry');
        IntCodeDictionary.Add('KSH', 'kilogram of sodium hydroxide (caustic soda)');
        IntCodeDictionary.Add('KT', 'kit');
        IntCodeDictionary.Add('KTM', 'kilometre');
        IntCodeDictionary.Add('KTN', 'kilotonne');
        IntCodeDictionary.Add('KUR', 'kilogram of uranium');
        IntCodeDictionary.Add('KVA', 'kilovolt - ampere');
        IntCodeDictionary.Add('KVR', 'kilovar');
        IntCodeDictionary.Add('KVT', 'kilovolt');
        IntCodeDictionary.Add('KW', 'kilograms per millimeter');
        IntCodeDictionary.Add('KWH', 'kilowatt hour');
        IntCodeDictionary.Add('KWT', 'kilowatt');
        IntCodeDictionary.Add('KX', 'millilitre per kilogram');
        IntCodeDictionary.Add('L2', 'litre per minute');
        IntCodeDictionary.Add('LA', 'pound per cubic inch');
        IntCodeDictionary.Add('LBR', 'pound');
        IntCodeDictionary.Add('LBT', 'troy pound (US)');
        IntCodeDictionary.Add('LC', 'linear centimetre');
        IntCodeDictionary.Add('LD', 'litre per day');
        IntCodeDictionary.Add('LE', 'lite');
        IntCodeDictionary.Add('LEF', 'leaf');
        IntCodeDictionary.Add('LF', 'linear foot');
        IntCodeDictionary.Add('LH', 'labour hour');
        IntCodeDictionary.Add('LI', 'linear inch');
        IntCodeDictionary.Add('LJ', 'large spray');
        IntCodeDictionary.Add('LK', 'link');
        IntCodeDictionary.Add('LM', 'linear metre');
        IntCodeDictionary.Add('LN', 'length');
        IntCodeDictionary.Add('LO', 'lot');
        IntCodeDictionary.Add('LP', 'liquid pound');
        IntCodeDictionary.Add('LPA', 'litre of pure alcohol');
        IntCodeDictionary.Add('LR', 'layer');
        IntCodeDictionary.Add('LS', 'lump sum');
        IntCodeDictionary.Add('LTN', 'ton (UK) or longton (US)');
        IntCodeDictionary.Add('LTR', 'litre');
        IntCodeDictionary.Add('LUM', 'lumen');
        IntCodeDictionary.Add('LUX', 'lux');
        IntCodeDictionary.Add('LX', 'linear yard per pound');
        IntCodeDictionary.Add('LY', 'linear yard');
        IntCodeDictionary.Add('M0', 'magnetic tape');
        IntCodeDictionary.Add('M1', 'milligrams per litre');
        IntCodeDictionary.Add('M4', 'monetary value');
        IntCodeDictionary.Add('M5', 'microcurie');
        IntCodeDictionary.Add('M7', 'micro-inch');
        IntCodeDictionary.Add('M9', 'million Btu per 1000 cubic feet');
        IntCodeDictionary.Add('MA', 'machine per unit');
        IntCodeDictionary.Add('MAL', 'mega litre');
        IntCodeDictionary.Add('MAM', 'megametre');
        IntCodeDictionary.Add('MAW', 'megawatt');
        IntCodeDictionary.Add('MBE', 'thousand standard brick equivalent');
        IntCodeDictionary.Add('MBF', 'thousand board feet');
        IntCodeDictionary.Add('MBR', 'millibar');
        IntCodeDictionary.Add('MC', 'microgram');
        IntCodeDictionary.Add('MCU', 'millicurie');
        IntCodeDictionary.Add('MD', 'air dry metric ton');
        IntCodeDictionary.Add('MF', 'milligram per square foot per side');
        IntCodeDictionary.Add('MGM', 'milligram');
        IntCodeDictionary.Add('MHZ', 'megahertz');
        IntCodeDictionary.Add('MIK', 'square mile');
        IntCodeDictionary.Add('MIL', 'thousand');
        IntCodeDictionary.Add('MIN', 'minute');
        IntCodeDictionary.Add('MIO', 'million');
        IntCodeDictionary.Add('MIU', 'million international unit');
        IntCodeDictionary.Add('MK', 'milligram per square inch');
        IntCodeDictionary.Add('MLD', 'milliard');
        IntCodeDictionary.Add('MLT', 'millilitre');
        IntCodeDictionary.Add('MMK', 'square millimetre');
        IntCodeDictionary.Add('MMQ', 'cubic millimetre');
        IntCodeDictionary.Add('MMT', 'millimetre');
        IntCodeDictionary.Add('MON', 'month');
        IntCodeDictionary.Add('MPA', 'megapascal');
        IntCodeDictionary.Add('MQ', 'thousand metre');
        IntCodeDictionary.Add('MQH', 'cubic metre per hour');
        IntCodeDictionary.Add('MQS', 'cubic metre per second');
        IntCodeDictionary.Add('MSK', 'metre per second squared');
        IntCodeDictionary.Add('MT', 'mat');
        IntCodeDictionary.Add('MTK', 'square metre');
        IntCodeDictionary.Add('MTQ', 'cubic metre');
        IntCodeDictionary.Add('MTR', 'metre');
        IntCodeDictionary.Add('MTS', 'metre per second');
        IntCodeDictionary.Add('MV', 'number of mults');
        IntCodeDictionary.Add('MVA', 'megavolt - ampere');
        IntCodeDictionary.Add('MWH', 'megawatt hour (1000 kW.h)');
        IntCodeDictionary.Add('N1', 'pen calorie');
        IntCodeDictionary.Add('N2', 'number of lines');
        IntCodeDictionary.Add('N3', 'print point');
        IntCodeDictionary.Add('NA', 'milligram per kilogram');
        IntCodeDictionary.Add('NAR', 'number of  articles');
        IntCodeDictionary.Add('NB', 'barge');
        IntCodeDictionary.Add('NBB', 'number of bobbins');
        IntCodeDictionary.Add('NC', 'car');
        IntCodeDictionary.Add('NCL', 'number of cells');
        IntCodeDictionary.Add('ND', 'net barrel');
        IntCodeDictionary.Add('NE', 'net litre');
        IntCodeDictionary.Add('NEW', 'newton');
        IntCodeDictionary.Add('NF', 'message');
        IntCodeDictionary.Add('NG', 'net gallon (us)');
        IntCodeDictionary.Add('NH', 'message hour');
        IntCodeDictionary.Add('NI', 'net imperial gallon');
        IntCodeDictionary.Add('NIU', 'number of international units');
        IntCodeDictionary.Add('NJ', 'number of screens');
        IntCodeDictionary.Add('NL', 'load');
        IntCodeDictionary.Add('NMI', 'nautical mile');
        IntCodeDictionary.Add('NMP', 'number of packs');
        IntCodeDictionary.Add('NN', 'train');
        IntCodeDictionary.Add('NPL', 'number of parcels');
        IntCodeDictionary.Add('NPR', 'number of pairs');
        IntCodeDictionary.Add('NPT', 'number of parts');
        IntCodeDictionary.Add('NQ', 'mho');
        IntCodeDictionary.Add('NR', 'micromho');
        IntCodeDictionary.Add('NRL', 'number of rolls');
        IntCodeDictionary.Add('NT', 'net ton');
        IntCodeDictionary.Add('NTT', 'net register ton');
        IntCodeDictionary.Add('NU', 'newton metre');
        IntCodeDictionary.Add('NV', 'vehicle');
        IntCodeDictionary.Add('NX', 'part per thousand');
        IntCodeDictionary.Add('NY', 'pound per air dry metric ton');
        IntCodeDictionary.Add('OA', 'panel');
        IntCodeDictionary.Add('OHM', 'ohm');
        IntCodeDictionary.Add('ON', 'ounce per square yard');
        IntCodeDictionary.Add('ONZ', 'ounce');
        IntCodeDictionary.Add('OP', 'two pack');
        IntCodeDictionary.Add('OT', 'overtime hour');
        IntCodeDictionary.Add('OZ', 'ounce av');
        IntCodeDictionary.Add('OZA', 'fluid ounce (US)');
        IntCodeDictionary.Add('OZI', 'fluid ounce (UK)');
        IntCodeDictionary.Add('P0', 'page - electronic');
        IntCodeDictionary.Add('P1', 'percent');
        IntCodeDictionary.Add('P2', 'pound per foot');
        IntCodeDictionary.Add('P3', 'three pack');
        IntCodeDictionary.Add('P4', 'four pack');
        IntCodeDictionary.Add('P5', 'five pack');
        IntCodeDictionary.Add('P6', 'six pack');
        IntCodeDictionary.Add('P7', 'seven pack');
        IntCodeDictionary.Add('P8', 'eight pack');
        IntCodeDictionary.Add('P9', 'nine pack');
        IntCodeDictionary.Add('PA', 'packet');
        IntCodeDictionary.Add('PAL', 'pascal');
        IntCodeDictionary.Add('PB', 'pair inch');
        IntCodeDictionary.Add('PD', 'pad');
        IntCodeDictionary.Add('PE', 'pound equivalent');
        IntCodeDictionary.Add('PF', 'pallet (lift)');
        IntCodeDictionary.Add('PG', 'plate');
        IntCodeDictionary.Add('PGL', 'proof gallon');
        IntCodeDictionary.Add('PI', 'pitch');
        IntCodeDictionary.Add('PK', 'package');
        IntCodeDictionary.Add('PL', 'pail');
        IntCodeDictionary.Add('PM', 'pound percentage');
        IntCodeDictionary.Add('PN', 'pound net');
        IntCodeDictionary.Add('PO', 'pound per inch of length');
        IntCodeDictionary.Add('PQ', 'page per inch');
        IntCodeDictionary.Add('PR', 'pair');
        IntCodeDictionary.Add('PS', 'pound-force per square inch');
        IntCodeDictionary.Add('PT', 'pint (US)');
        IntCodeDictionary.Add('PTD', 'dry pint (US)');
        IntCodeDictionary.Add('PTI', 'pint  (UK)');
        IntCodeDictionary.Add('PTL', 'liquid pint (US)');
        IntCodeDictionary.Add('PU', 'tray / tray pack');
        IntCodeDictionary.Add('PV', 'half pint (US)');
        IntCodeDictionary.Add('PW', 'pound per inch of width');
        IntCodeDictionary.Add('PY', 'peck dry (US)');
        IntCodeDictionary.Add('PZ', 'peck dry (UK)');
        IntCodeDictionary.Add('Q3', 'meal');
        IntCodeDictionary.Add('QA', 'page - facsimile');
        IntCodeDictionary.Add('QAN', 'quarter (of a year)');
        IntCodeDictionary.Add('QB', 'page - hardcopy');
        IntCodeDictionary.Add('QD', 'quarter dozen');
        IntCodeDictionary.Add('QH', 'quarter hour');
        IntCodeDictionary.Add('QK', 'quarter kilogram');
        IntCodeDictionary.Add('QR', 'quire');
        IntCodeDictionary.Add('QT', 'quart (US)');
        IntCodeDictionary.Add('QTD', 'dry quart (US)');
        IntCodeDictionary.Add('QTI', 'quart (UK)');
        IntCodeDictionary.Add('QTL', 'liquid quart (US)');
        IntCodeDictionary.Add('QTR', 'quarter (UK)');
        IntCodeDictionary.Add('R1', 'pica');
        IntCodeDictionary.Add('R4', 'calorie');
        IntCodeDictionary.Add('R9', 'thousand cubic metre');
        IntCodeDictionary.Add('RA', 'rack');
        IntCodeDictionary.Add('RD', 'rod');
        IntCodeDictionary.Add('RG', 'ring');
        IntCodeDictionary.Add('RH', 'running or operating hour');
        IntCodeDictionary.Add('RK', 'roll metric measure');
        IntCodeDictionary.Add('RL', 'reel');
        IntCodeDictionary.Add('RM', 'ream');
        IntCodeDictionary.Add('RN', 'ream metric measure');
        IntCodeDictionary.Add('RO', 'roll');
        IntCodeDictionary.Add('RP', 'pound per ream');
        IntCodeDictionary.Add('RPM', 'revolutions per minute');
        IntCodeDictionary.Add('RPS', 'revolutions per second');
        IntCodeDictionary.Add('RS', 'reset');
        IntCodeDictionary.Add('RT', 'revenue ton mile');
        IntCodeDictionary.Add('RU', 'run');
        IntCodeDictionary.Add('S3', 'square foot per second');
        IntCodeDictionary.Add('S4', 'square metre per second');
        IntCodeDictionary.Add('S5', 'sixty fourths of an inch');
        IntCodeDictionary.Add('S6', 'session');
        IntCodeDictionary.Add('S7', 'storage unit');
        IntCodeDictionary.Add('S8', 'standard advertising unit');
        IntCodeDictionary.Add('SA', 'sack');
        IntCodeDictionary.Add('SAN', 'half year (6 months)');
        IntCodeDictionary.Add('SCO', 'score');
        IntCodeDictionary.Add('SCR', 'scruple');
        IntCodeDictionary.Add('SD', 'solid pound');
        IntCodeDictionary.Add('SE', 'section');
        IntCodeDictionary.Add('SEC', 'second');
        IntCodeDictionary.Add('SET', 'set');
        IntCodeDictionary.Add('SG', 'segment');
        IntCodeDictionary.Add('SHT', 'shipping ton');
        IntCodeDictionary.Add('SIE', 'siemens');
        IntCodeDictionary.Add('SK', 'split tanktruck');
        IntCodeDictionary.Add('SL', 'slipsheet');
        IntCodeDictionary.Add('SMI', 'mile (statute mile)');
        IntCodeDictionary.Add('SN', 'square rod');
        IntCodeDictionary.Add('SO', 'spool');
        IntCodeDictionary.Add('SP', 'shelf package');
        IntCodeDictionary.Add('SQ', 'square');
        IntCodeDictionary.Add('SR', 'strip');
        IntCodeDictionary.Add('SS', 'sheet  metric measure');
        IntCodeDictionary.Add('SST', 'short standard (7200 matches)');
        IntCodeDictionary.Add('ST', 'sheet');
        IntCodeDictionary.Add('STI', 'stone (UK)');
        IntCodeDictionary.Add('STN', 'ton (US) or short ton (UK/US)');
        IntCodeDictionary.Add('SV', 'skid');
        IntCodeDictionary.Add('SW', 'skein');
        IntCodeDictionary.Add('SX', 'shipment');
        IntCodeDictionary.Add('T0', 'telecommunication line in service');
        IntCodeDictionary.Add('T1', 'thousand pound gross');
        IntCodeDictionary.Add('T3', 'thousand piece');
        IntCodeDictionary.Add('T4', 'thousand bag');
        IntCodeDictionary.Add('T5', 'thousand casing');
        IntCodeDictionary.Add('T6', 'thousand gallon (US)');
        IntCodeDictionary.Add('T7', 'thousand impression');
        IntCodeDictionary.Add('T8', 'thousand linear inch');
        IntCodeDictionary.Add('TA', 'tenth cubic foot');
        IntCodeDictionary.Add('TAH', 'kiloampere hour (thousand ampere hour)');
        IntCodeDictionary.Add('TC', 'truckload');
        IntCodeDictionary.Add('TD', 'therm');
        IntCodeDictionary.Add('TE', 'tote');
        IntCodeDictionary.Add('TF', 'ten square yard');
        IntCodeDictionary.Add('TI', 'thousand square inch');
        IntCodeDictionary.Add('TJ', 'thousand square centimetre');
        IntCodeDictionary.Add('TK', 'tank, rectangular');
        IntCodeDictionary.Add('TL', 'thousand feet (linear)');
        IntCodeDictionary.Add('TN', 'tin');
        IntCodeDictionary.Add('TNE', 'tonne (metric ton)');
        IntCodeDictionary.Add('TP', 'ten pack');
        IntCodeDictionary.Add('TPR', 'ten pair');
        IntCodeDictionary.Add('TQ', 'thousand feet');
        IntCodeDictionary.Add('TQD', 'thousand cubic metre per day');
        IntCodeDictionary.Add('TR', 'ten square feet');
        IntCodeDictionary.Add('TRL', 'trillion (EUR)');
        IntCodeDictionary.Add('TS', 'thousand square feet');
        IntCodeDictionary.Add('TSD', 'tonne of substance 90 % dry');
        IntCodeDictionary.Add('TSH', 'ton of steam per hour');
        IntCodeDictionary.Add('TT', 'thousand linear metre');
        IntCodeDictionary.Add('TU', 'tube');
        IntCodeDictionary.Add('TV', 'thousand kilogram');
        IntCodeDictionary.Add('TW', 'thousand sheet');
        IntCodeDictionary.Add('TY', 'tank, cylindrical');
        IntCodeDictionary.Add('U1', 'treatment');
        IntCodeDictionary.Add('U2', 'tablet');
        IntCodeDictionary.Add('UA', 'torr');
        IntCodeDictionary.Add('UB', 'telecommunication  line in service average');
        IntCodeDictionary.Add('UC', 'telecommunication port');
        IntCodeDictionary.Add('UD', 'tenth minute');
        IntCodeDictionary.Add('UE', 'tenth hour');
        IntCodeDictionary.Add('UF', 'usage per telecommunication line average');
        IntCodeDictionary.Add('UH', 'ten thousand yard');
        IntCodeDictionary.Add('UM', 'million unit');
        IntCodeDictionary.Add('VA', 'volt ampere per kilogram');
        IntCodeDictionary.Add('VI', 'vial');
        IntCodeDictionary.Add('VLT', 'volt');
        IntCodeDictionary.Add('VQ', 'bulk');
        IntCodeDictionary.Add('VS', 'visit');
        IntCodeDictionary.Add('W2', 'wet kilo');
        IntCodeDictionary.Add('W4', 'two week');
        IntCodeDictionary.Add('WA', 'watt per kilogram');
        IntCodeDictionary.Add('WB', 'wet pound');
        IntCodeDictionary.Add('WCD', 'cord');
        IntCodeDictionary.Add('WE', 'wet ton');
        IntCodeDictionary.Add('WEB', 'weber');
        IntCodeDictionary.Add('WEE', 'week');
        IntCodeDictionary.Add('WG', 'wine gallon');
        IntCodeDictionary.Add('WH', 'wheel');
        IntCodeDictionary.Add('WHR', 'watt hour');
        IntCodeDictionary.Add('WI', 'weight per square inch');
        IntCodeDictionary.Add('WM', 'working month');
        IntCodeDictionary.Add('WR', 'wrap');
        IntCodeDictionary.Add('WSD', 'standard');
        IntCodeDictionary.Add('WTT', 'watt');
        IntCodeDictionary.Add('WW', 'millilitre of water');
        IntCodeDictionary.Add('X1', 'chain');
        IntCodeDictionary.Add('YDK', 'square yard');
        IntCodeDictionary.Add('YDQ', 'cubic yard');
        IntCodeDictionary.Add('YL', 'hundred linear yard');
        IntCodeDictionary.Add('YRD', 'yard');
        IntCodeDictionary.Add('YT', 'ten yard');
        IntCodeDictionary.Add('Z1', 'lift van');
        IntCodeDictionary.Add('Z2', 'chest');
        IntCodeDictionary.Add('Z3', 'cask');
        IntCodeDictionary.Add('Z4', 'hogshead');
        IntCodeDictionary.Add('Z5', 'lug');
        IntCodeDictionary.Add('Z6', 'conference point');
        IntCodeDictionary.Add('Z8', 'newspage agate line');
        IntCodeDictionary.Add('ZP', 'page');
        IntCodeDictionary.Add('ZZ', 'mutually defined');
    end;

    [EventSubscriber(ObjectType::Table, Database::"Unit of Measure", 'OnAfterValidateEvent', 'International Standard Code', true, true)]
    local procedure UnitOfMeasureOnAfterValidateInternationCode(var Rec: Record "Unit of Measure")
    begin
        if Rec."International Standard Code" <> '' then
            GetAndTestUoMCode(Rec);
    end;

}
