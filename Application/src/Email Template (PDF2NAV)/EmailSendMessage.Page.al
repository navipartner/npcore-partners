page 6059860 "NPR Email Send Message"
{
    Extensible = False;
    Caption = 'Send E-mail';
    DeleteAllowed = false;
    InsertAllowed = false;
    ModifyAllowed = false;
    PageType = StandardDialog;
    UsageCategory = None;
    SourceTable = "NPR E-mail Template Header";

    layout
    {
        area(Content)
        {
            group(General)
            {
                field(RecipientEmail; RecipientEmail)
                {
                    Caption = 'Recipient E-mail';
                    ToolTip = 'Specifies the value of the Recipient E-mail field';
                    ApplicationArea = NPRRetail;

                }
                field(SenderEmailTemplate; SenderEmailTemplate)
                {
                    Caption = 'Sender E-mail';
                    ToolTip = 'Specifies the value of the Sender E-mail field';
                    ApplicationArea = NPRRetail;
                }
                field(RecordInfo; RecordInfo)
                {

                    Caption = 'Record';
                    Visible = true;
                    ToolTip = 'Specifies the value of the Record field';
                    ApplicationArea = NPRRetail;

                    trigger OnLookup(var Text: Text): Boolean
                    begin
                        if SelectedRecordRefTemplate.Number <> 0 then
                            SelectedRecordRefTemplate.Close();
                        if SelectRecord(Rec, SelectedRecordRefTemplate) then begin
                            Text := Format(SelectedRecordRefTemplate.RecordId);
                            EmailText := EmailManagement.MakeMessage(Rec, SelectedRecordRefTemplate);
                            exit(true);
                        end else
                            Text := '';
                    end;
                }
                field(EmailText; EmailText)
                {

                    MultiLine = true;
                    Visible = not (TransactionalEmailTemplate or UseHtmlTemplate);
                    ShowCaption = false;
                    ToolTip = 'Specifies the value of the Email Text field';
                    ApplicationArea = NPRRetail;
                }
                field(HtmlInfoLbl; HtmlInfoLbl)
                {
                    ShowCaption = false;
                    Visible = UseHtmlTemplate and not TransactionalEmailTemplate;
                    Editable = false;
                    ToolTip = 'Specifies if the body is generated from the HTML Template';
                    ApplicationArea = NPRRetail;
                }
                field(SmartTransactionLbl; SmartTransactionLbl)
                {
                    ShowCaption = false;
                    Editable = false;
                    Visible = TransactionalEmailTemplate;
                    ToolTip = 'Specifies if the mail body is generated by a chosen template';
                    ApplicationArea = NPRRetail;
                }
            }
        }
    }

    local procedure SelectRecord(Template: Record "NPR E-mail Template Header"; var RecRef: RecordRef): Boolean
    var

        PageManagement: Codeunit "Page Management";
        DataTypeManagement: Codeunit "Data Type Management";
        RecVariant: Variant;
        PageID: Integer;
        FldRef: FieldRef;
        EmailTemplateFilters: Record "NPR E-mail Template Filter";
    begin
        PageID := PageManagement.GetDefaultLookupPageID(Template."Table No.");
        if PageID <> 0 then begin
            RecRef.Open(Template."Table No.");
            EmailTemplateFilters.Reset();
            EmailTemplateFilters.SetRange("Table No.", Template."Table No.");
            EmailTemplateFilters.SetRange("E-mail Template Code", Template.Code);
            if EmailTemplateFilters.FindSet() then
                repeat
                    FldRef := RecRef.Field(EmailTemplateFilters."Field No.");
                    FldRef.SetFilter(EmailTemplateFilters.Value);
                until EmailTemplateFilters.Next() = 0;
            RecVariant := RecRef;
            if RecRef.IsEmpty then
                Message(Text001, RecRef.Caption);
            if Page.RunModal(PageID, RecVariant) = ACTION::LookupOK then begin
                DataTypeManagement.GetRecordRef(RecVariant, RecRef);
                exit(true);
            end;
        end
        else
            Message(NoPageIdMsg, Template."Table No.");
    end;

    procedure SetData(SenderEmail: Text; RecRef: RecordRef; UseHtmlTmpl: Boolean; TransactionalEmail: Boolean)
    begin
        SenderEmailTemplate := SenderEmail;
        SelectedRecordRefTemplate := RecRef;
        UseHtmlTemplate := UseHtmlTmpl;
        TransactionalEmailTemplate := TransactionalEmail;
    end;

    procedure GetData(var SenderEmailDialog: Text; var RecRefDialog: RecordRef; var ReceiverDialog: Text; var MessageDialog: Text)
    begin
        SenderEmailDialog := SenderEmailTemplate;
        RecRefDialog := SelectedRecordRefTemplate;
        ReceiverDialog := RecipientEmail;
        MessageDialog := EmailText;
    end;

    var
        RecipientEmail: Text;
        RecordInfo: Text;
        EmailText: Text;
        SenderEmailTemplate: Text;
        TransactionalEmailTemplate: Boolean;
        UseHtmlTemplate: Boolean;
        SelectedRecordRefTemplate: RecordRef;
        EmailManagement: Codeunit "NPR E-mail Management";
        Text001: Label 'No records in %1 within the filters.';
        NoPageIdMsg: Label 'Table %1 does not have a Lookup Page ID';
        HtmlInfoLbl: Label 'Mail body is generated from the HTML Template';
        SmartTransactionLbl: Label 'Mail body is generated by chosen template';
}